# Global analysis of banking apps
Castle et al.  conducted a manual analysis of 197 Android apps and interviewed 7 app devel- opers across developing countries (Africa and South America). They divided 13 hypothetical attacks into 5 categories and concluded that realistic concerns are on SMS interceptions, server attacks, MITM attacks, unauthorized access, etc. Lebeck et al. [ 53 ] summarized weaknesses of mobile money apps in developing economies, and combined existing techniques ( e.g., cryptocurrencies) to achieve security and functionality goals. Parasa et al. [ 61] studied 9 mostly- used mobile money apps across 9 Australasian countries, and re- ported the security weaknesses in authentication, data integrity, poor protocol implementation, malfunction, and overlooked attack vectors. They reported that the apps from comparatively developed countries (e.g. , AliPay, Osaifu-Keitai) also have weaknesses. Be- sides, Taylor et al. [ 69 ] adopted two off-the-shelf tools to roughly scan the apps that are labeled as finance from Google Play Store. All these prior work adopts small-scale analysis or is taken by survey, while our results are obtained in an automated and largest-scale fashion, which have not been systematically scrutinized before. Besides, Chen et al. [ 35 ] focused on studying the details of issue- reporting and issue-patching lifecycle based on the results of weak- ness detection tools like Ausera [ 34 ]. It unveils gaps between the industry and academia regarding the inconsistent understanding of reported issues and responsibilities. However, in this paper, we propose a comprehensive taxonomy of data-related security weak- nesses for banking apps, and propose a detection approach based on the taxonomy. Using Ausera, we conducted experiments to identify security weaknesses and investigate the overall ecosystem of global banking apps from multiple aspects.

# Security analysis of Android apps
Taint analysis is a commonly- used method to reveal potential privacy leakage in Android apps. For example, TaintDroid [43 ] is a dynamic taint-tracing tool which tracks flows of private data by modifying Dalvik virtual machine; FlowDroid and IccTA [ 29, 54 ] are both static taint analysis tools that accept the source and sink configurations for privacy leaks. However, these tools target on general apps [ 32], and thus may not be able to unveil specific security weaknesses (summarized in Ta- ble 1) when applied for banking apps. We also detail the differences in Section 2.

# 6 CONCLUSION
In this paper, we conduct a large-scale comprehensive empirical study on the collected 2,157 security weaknesses of 693 banking apps across more than 80 countries from various aspects. To collect the dataset, we also propose a three-phase system, Ausera, to automatically identify data-related weaknesses in banking apps. Our detected security weaknesses (i.e., 52 security weaknesses) have been confirmed and patched by the 21 corresponding banks and some of them have actively collaborated with us to improve the security of their banking apps. The study also narrows down the gaps between academic research and industrial banks, and helps both banks and third-party companies to better tackle security weaknesses.

# ICSE ’20, May 23–29, 2020, Seoul, Republic of Korea
S. Chen, L. Fan, G. Meng, T. Su, M. Xue, Y. Xue, Y. Liu, and L. Xu
# ICSE ’20, May 23–29, 2020, Seoul, Republic of Korea.