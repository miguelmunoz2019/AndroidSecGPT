# The Android OS stack and its vulnerabilities: an empirical study
Alejandro Mazuera-Rozo1,2 · Jairo Bautista-Mora1 · Mario Linares-Vásquez1 · Sandra Rueda1 · Gabriele Bavota2
Published online: 20 February 2019
© Springer Science+Business Media, LLC, part of Springer Nature 2019
# Abstract
The wide and rapid adoption of Android-based devices in the last years has motivated the usage of Android apps to support a broad range of daily activities. In that sense, being the most popular mobile platform makes it an attractive target for security attacks. In fact, 1,489 security vulnerabilities have been reported in the last three years (2015-2017) for the Android OS (which is the underlying platform for Android-based devices). While there is a plethora of approaches and tools for detecting malware and security issues in Android apps, few research has been done to identify, categorize, or detect vulnerabilities in the Android OS. In this paper we present the largest study so far aimed at analyzing software vulnerabilities in the Android OS. In particular, we analyzed a total of 1,235 vulnerabilities from four different perspectives: vulnerability types and their evolution, CVSS vectors that describe the vulnerabilities, impacted Android OS layers, and their survivability across the Android OS history. Based on our findings, we propose a list of future actions that could be performed by researchers and practitioners to reduce the number of vulnerabilities in the Android OS as well as their impact and survivability.

# Keywords
Vulnerabilities · Android · Empirical study · Operating system
# Communicated by
Lin Tan
# Contact Information
Mario Linares-Vásquez: m.linaresv@uniandes.edu.co
Alejandro Mazuera-Rozo: a.mazuera@uniandes.edu.co
Jairo Bautista-Mora: je.bautista10@uniandes.edu.co
Sandra Rueda: sarueda@uniandes.edu.co
Gabriele Bavota: gabriele.bavota@usi.ch
# Affiliations
1 Universidad de los Andes, Bogotá, Colombia
2 Università della Svizzera italiana, Lugano, Switzerland
# Empirical Software Engineering (2019) 24:2056–2101
# 1 Introduction
In the last few years, mobile apps have powered a whole new economy that substantially impacted the software market. The cultural popularity of mobile devices, the new monetization/revenue models the apps’ market propose, and the capillary distribution infrastructure represented by app stores, are only some of the driving factors making apps an attractive market for software developers. Also, the need for “enterprise apps” that support startups or serve as a new front-end for traditional companies is pushing software-related professionals to embrace mobile technologies (VisionMobile 2014).

From the users’ perspective, mobile apps and devices are a mechanism for achieving ubiquity, allowing them to perform multiple tasks and daily activities from anywhere, and to always have available at the touch of their hands important/sensitive information. Consequently, the security of mobile apps and of the underlying platforms on which they run has become a big concern for researchers and practitioners, due to the impact that security issues affecting mobile platforms might have on the private life of individuals (e.g., allowing to stole private files) as well as on companies (e.g., allowing to intercept strategic business decisions) (LLC 2014; Stefanko 2015; Anderson et al. 2016).

Recently, the impact of those vulnerabilities in everyday life has been more evident to society due to public announcements of malware and vulnerabilities in mobile platforms that compromise sensitive information and/or computational resources in the affected devices. In 2015 mobile malware reached a tremendous +153% (Android) and +235% (iOS) in the number of reported threats as compared to the previous year . Representative examples of mobile malware with notorious impact are games such as “Cowboy adventure” and “Jump chess” that infected about one million devices , the Locker trojan  for Android, and the XcodeGhost malware that infected 40k+ apps from the Apple App Store . Also, according to the CVE details portal (MITRE 2017q), 1,489 vulnerabilities in the Android OS were reported between 2015 and 2017. One of those famous vulnerabilities is “Stagefright”  that affected 95% of the Android devices in 2015.

As a contribution from the research community, substantial effort has been recently invested in the analysis and detection of malware and vulnerabilities at the applications level (e.g., Bagheri et al. 2015; Ahmad et al. 2016; Sadeghi et al. 2015, 2016, 2017; Garcia et al. 2017). However, (i) few works have focused on the vulnerabilities at the OS level (Thomas 2015a, b; Jimenez et al. 2016; Bagheri et al. In Press; Cao et al. 2015), the underlying platform on which any app runs, and (ii) most of the studies have focused on a limited number of vulnerabilities.

In this paper, we present an empirical study aimed at analyzing Android-related vulnerabilities from different perspectives and with a specific focus on those affecting the Android Operating System (Android OS). In particular, we study (i) the types of vulnerability and their evolution over time, (ii) the most common security scoring vectors in the vulnerabilities, (iii) the layers and subsystems from the Android OS affected by vulnerabilities, and (iv) the survivability of vulnerabilities (i.e., the number of days between the vulnerability introduction and its fixing). While previous studies have focused the attention on a small set of vulnerabilities (e.g., 11 in Thomas et al. (2015b), 1 in Thomas (2015a), and 32 in Jimenez et al. 2016), we mined all the vulnerabilities (1,235) available in the official Android bulletins and the CVE-details portal up to August 2017. The vast majority of our study has been carried out via manual analysis of vulnerability-related documents available on issue.

# Empirical Software Engineering (2019) 24:2056–2101
trackers, versioning system, official Android security bulletins, and information available on the National Vulnerability Database (NIST 2017).

Knowing the types of security vulnerabilities affecting the Android devices and their characteristics can help to guide (i) apps developers, in focusing their verification & validation activities toward the identification of the most frequently reported types of vulnerability, (ii) researchers, in investing in vulnerabilities detection tools targeting the most diffused types of Android-related vulnerabilities (thus being particularly valuable to increase the security of Android devices), and (iii) language/API developers, to design/improve mechanisms for secure coding of Android apps and the underlying platform.

As a result of our study we defined a detailed taxonomy of OS-related vulnerabilities affecting Android devices (Figs. 3 and 4) based on the Common Weaknesses Enumeration (MITRE 2017p), and identified the most impacted layers/subsystems of the Android OS (Fig. 11). We found that most of the vulnerabilities, while not requiring a complex attack to be exploited, have a severe impact on the device’s confidentiality, integrity, and availability; most of the vulnerabilities (69%) are exploitable remotely and do not require authentication on the system. The hardware drivers in the lowest level of the Android OS stack (i.e., Linux kernel) and the native libraries are the layers mostly impacted by security vulnerabilities, and the lack of secure coding practices for restricting operations in the bounds of memory buffers is the main source of vulnerabilities. In addition, we found that Android-related security vulnerabilities survive for very long time (at least 770 days, on average). Finally, we observed an increasing trend of the vulnerabilities affecting the Android OS over time.

This paper is an extension of a previous paper published at the 2017 Conference on Mining Software Repositories (Linares-Vásquez et al. 2017). The extension includes: (i) a larger set of vulnerabilities (1,235 vs 660), which accounts for 87% of additional data; (ii) additional analyses aimed at identifying the evolution of vulnerabilities since 2008 and their characteristics as reported in the Common Vulnerability Scoring System (CVSS) vectors; (iii) an analysis of the vulnerability patches to understand the most common fixes; (iv) additional material in the background and related work section; (v) more vulnerabilities examples discussed qualitatively; and (vi) an extensive online appendix that includes the complete dataset.

# Structure of the paper
We provide some background on the Android OS security vulnerabilities and discuss the related literature in Section 2. Section 3 presents the design of our study, while our findings are discussed in Section 4. Section 5 lists the threats that could affect the validity of our results. Finally, Section 6 outlines the learned lessons and future work.

# 2 Background and Related Work
The wide and rapid adoption of Android-based devices in the last years has motivated the usage of Android apps to support a broad range of daily activities. In that sense, being the most popular mobile platform makes it an attractive target for security attacks . In fact, the number and complexity of the attacks to Android-based systems is increasing drastically . Since 2008, Android-related vulnerabilities have been reported including critical issues such as the “Heartbleed”  flaw in the SSL library, the “Stagefright” flaw in the media framework ;
Empirical Software Engineering (2019) 24:2056–2101 2059
Nickinson 2015; Burgess 2016) that has infected 95% of the Android devices in 2015, and the “BlueBorne” vulnerability that allows attackers to remotely penetrate and control devices via bluetooth . As a consequence, the industry has improved the security mechanisms and services in the Android ecosystem  and designed mobile-specific malware detectors.