© The British Computer Society 2019. All rights reserved.

For permissions, please e-mail: journals.permissions@oup.com
Advance Access publication on 14 November 2019
doi: 10/comjnl/bxz109
# New Security Risk Value Estimate Method for Android Applications
Latifa Er-rajy*, My Ahmed El Kiram and Mohamed El Ghazouani
Department of Computer Sciences, University Cadi Ayyad, Marrakesh, Morocco
∗Corresponding author: errajy.latifa@gmail.com
Downloaded from https://academic.oup.com/comjnl/article/63/4/593/5618854 by Pontificia Universidad Javeriana user on 12 August 2024
Nowadays, mobile applications are the devices’ core, so their security is essential for the platform on which are installed. Therefore, to make this security strong, Android implements permission system and sandboxing mechanism to reduce the attacks contingency. Also, antivirus software is used to detect the already known malware based on their signature, but unfortunately, this kind of program cannot detect cloned or repackaged malware. Thus, using authorizations to estimate the security vulnerability will surely be very useful for avoiding applications that are more susceptible to be dangerous according to the risk values obtained. Consequently, this will provide systematic support that will make it easier for users to make appropriate decisions and therefore greatly improve the Android devices’ security. In this article, additionally to the risk measures that have been already proposed in previous studies based on functionalities such as permissions and function calls, we add a set of mathematical metrics describing the case of susceptible and innocent applications already known. Our risk assessment exploits applications already known as malware and safe samples without any threat.

Keywords: components; risk; permissions; Android; method
Received 22 September 2018; Revised 25 June 2019; Editorial Decision 14 August 2019
Handling editor: Mark Ryan
# 1. INTRODUCTION
In Android system, the majority of functionalities and features can be installed by end users as applications (apps) developed by anonymous developers or downloaded from PlayStore and Android markets. These apps provide access to the different types of services available on the device and access to end-user sensitive, private and personal data, such as contact lists, geo-location, messages and social networks . These types of accessibility make the privacy and security assurance more difficult. So, to combat the attacks that target Android, the permissions and sandboxing mechanisms are applied . This means that if an application has intention to perform any malicious activities such as making phone calls, stealing user-sensitive data or simply sending premium messages, the attacker must deceive users in order to install a malicious application, because other previously existing intrusion ways are almost eliminated in Android recent versions . At the installation time, an application must request permission to access system resources (such as location, Internet, cellular networks, etc.), and the user either accepts all the requested permissions or cancels the installation, since it is not possible to accept or deny access privileges selectively . The permissions granted to the application are not changeable as they are revoked from it when the user starts its removal process. Even if this security mechanism seems to be very simple and easy, but it creates many challenges because many users simply accept these authorizations without considering their implications on their personal data  since they do not usually have much time to study and think about the side effects of these permissions, they are only interested in completing the application installing process quickly to use it.

On the other hand, technical skills of an ordinary user are not enough to understand well the requested permissions impacts . In addition, an innocent application and a malware may request similar permissions, which will obviously complicate the task of making the correct decision by the end users. For example, if an application has granted certain critical permissions such as Internet permission, this application can easily control communication with remote servers. And, if it has access to the camera as well, it can send user personal pictures to any server on the Internet. For all these reasons, the security offered by the Android model is weak and vulnerable. It is unable to preserve the personal information from disclosure or to prevent fraudulent use of monetary resources. In fact,
Section D: Security in Computer Systems and Networks The Computer Journal, Vol. 63 No. 4, 2020
spyware, Trojan horses or adware can easily induce users by pretending to be a useful application for him and then hack banking applications on his device to steal his credit . To ensure an effective security, we propose in this article a new method to calculate the risk score that an application may cause to the user safety and send him a warning if the risk value obtained exceeds a predetermined value. This will allow the user to compare similar applications based on their risk scores. Android markets are in urgent need of an effective measure to calculate the risk rate that applications can present, in order to be able to identify and detect those that seem to be suspicious among the large number of applications newly submitted by developers. However, it will take a lot of time to carry out a detailed and thorough analysis for each new application in aiming to detect malware. Indeed, our studies [8–11] based on detailed evaluations reveal that Android risk calculation models use measures with vulnerabilities and unacceptable performances, which will undoubtedly force end users to lose confidence in Android applications. In fact, Android system never calculates high-risk values for an unknown malicious application. Actually, it has a low level of risk for this kind of application.

In this article, we present a new measurement that calculates the risk rate of Android applications much higher than those already proposed by other researchers. In fact, the existing risk measures are weak because they are mainly based on a single criterion. Nevertheless, our solution is based on a large set of well-known malicious applications. We proved our proposition effectiveness by performing many in-depth experiments on many actual applications samples selected from Android markets.

This article organization is as follows: In Section II, we present our related work. In Section III, we discuss Android security issue behind our solution. We present our proposed measure for calculating the risk rate in Section IV. Then, in Section V, we present the results obtained after our measure experimental evaluations applied to normal and malicious Android applications and their comparisons with those previously obtained by measures already proposed. Finally, in Section VI, we conclude our article.

# 2. RELATED WORK
If we look at Android system security, we find that there is a small number of researches that is interested in this topic. As we explained before, Android users have only two choices in front of them, whether they accept the permissions requested by the application they want to install to start its installation or deny the requested permissions and completely cancel the application installation process. The results obtained by these researches show that most users accept these permissions without paying attention to their impact on their personal data, which can be very dangerous if they fall in the hacker’s hands. Of course, researchers have tried to find effective solutions to solve this problem. So, they come out by some propositions to improve the already existing Android security architecture [12–14]. For example, Chin et al.  proposed to change Android permissions categorizations by highlighting the security danger instead of focusing on the requested permissions. They therefore proposed a new method to accept the permissions required by the application to be installed.

Correspondingly, Kelley et al.  proposed to control access to high-level critical data that affects the user’s privacy. Consequently, they proposed to replace the permission names with location information and contact lists in the first install page. Gates et al.  as well advised adapting the risk rate visualization to reduce the memory space size required for displaying permissions to the user and help him to make quick, correct and efficient decisions about the applications he wants to install on his device. In order to calculate these scores, Gates et al.  had based on varying set of permissions requested by each Android application. The majority of users prefer to have a brief summary of threat results or security display as graphical indicators since they are more convenient than textual information.