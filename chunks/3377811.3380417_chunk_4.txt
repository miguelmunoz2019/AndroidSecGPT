Apart from the comparison with the above 4 tools, we also discuss the comparison between Ausera and two taint analysis tools (i.e., FlowDroid  and IccTA ). Ausera aims to identify weaknesses specifically in banking apps, while FlowDroid and IccTA, which largely rely on sources and sinks defined in SuSi, aim to identify the data leakage in general apps. (1) The sources and sinks considered by FlowDroid and IccTA are specified by SuSi, which contains 12 different source categories and 15 different sink categories. However, among them, we only use taint analysis on 4 types of weaknesses (i.e., Shared preference leakage, logging leakage, SD card leakage, and SMS leakage). In other words, FlowDroid and IccTA cannot detect most of security weakness types in our proposed data-related baseline specific to banking apps. (2) In fact, we have deployed FlowDroid and IccTA on our defined sources and sinks, and find that they cannot identify the concrete data types (i.e., sensitive or non-sensitive) when tracking the 4 types of weaknesses. For example, developers usually output debug information such as string length via logging channel, however, tracking such non-sensitive data causes many false positives. While Ausera only tracks the labeled sensitive data that are most relevant to the core financial services of banking apps. (3) Most of the sources defined in SuSi are not sensitive in banking apps, such as the API invocations of Bluetooth, Calendar, and Settings. More comparison results can be found on our website.

# Answer to RQ1
In summary, existing state-of-the-practice tools are less effective (i.e., lower precision, more false positives, and cost more time) in identifying data-related weaknesses in banking apps, compared with Ausera. Therefore, Ausera can be used to collect a large number of security weaknesses for further in-depth analysis.

# Weakness collection
Ausera is demonstrated as the most effective tool to collect banking specific security weaknesses, we thus apply it on the collected 693 banking apps across 83 countries. Finally, we collect 2,157 security weaknesses for further large-scale empirical study.

# A LARGE-SCALE COMPREHENSIVE EMPIRICAL STUDY
In this section, we conduct a large-scale empirical study from different aspects based on the collected weaknesses by Ausera.

# RQ2: Security Status of Banking Apps
Since the multiple versions of a banking app may have overlapped weaknesses, we select the latest version of the 693 apps if they have multiple versions, and apply Ausera to these 470 unique banking apps to conduct the following study. Table 5 shows the results of weaknesses corresponding to the security baseline defined in Section 2.

# An Empirical Assessment of Security Risks of Global Android Banking Apps
# ICSE ’20, May 23–29, 2020, Seoul, Republic of Korea
# 3 Answer to RQ2
Overall, the security status of banking apps is severe according to the results. In summary, Screenshot (88%), Insecure Hash Function (72%), and ICC Leakage (68%) are the most popular weaknesses of banking apps. Meanwhile, Invalid Authentication (222 apps) also has severe damage.

# 3 RQ3: Global Distribution of Weaknesses
1. Weaknesses in banking apps of Asia outnumber those of Europe (resp. North America) by 1 (resp. 1) to 1, where each banking app of Asia has 6 weaknesses on average, indicating that the banking apps of developed countries (i.e., Europe and North America) have fewer weaknesses than those of developing countries. Ironically, to our surprise, we find that weaknesses in apps of Asian developed countries slightly outnumber (with 6 weaknesses per app) those of Asian developing countries.

2. Banking apps from Africa exhibit satisfactory security status, having only 4 weaknesses on average, some are even more secure than those of developed countries.

Possible reasons why the security of banking apps varies across regions can be interpreted as follows:
- The financial regulations and development guidelines are different across regions, which may affect the implementation of banking apps. For example, both Europe (GDPR ) and USA (PCI DSS ) adopt very strict security and privacy regulations. The GDPR poses a regulatory framework that is unique to the financial service industry. Failure to meet its requirements will come with potentially hefty penalties . This is also reflected by the 143 banking apps from Europe and USA, where data leakage rarely exists, with only 0 data leakage weakness reported per app.

- The development budget and developers’ expertise may affect the security of products. During our investigation, we find that a number of local banking apps of China have many more weaknesses than international or nationwide ones. We speculate that due to inadequate budget for app development, those released apps are prone to being less secure.

- Cashless payment systems have been bootstrapped in areas where traditional banking is uneconomical and expensive, removing large investments on the massively deployed financial infrastructure. This is evidenced by the fact that Kenya, a country in Africa, is a world leader of money transfers by mobile , and 68% of people in Kenya report the use of phones for a financial service.

Answer to RQ3. We conclude that apps across different countries exhibit various types of security status, mainly because of different economies and regulations that take shape. We find that apps from Africa have comparatively moderate security status, primarily because of its high demand for cashless services.

# ICSE ’20, May 23–29, 2020, Seoul, Republic of Korea
# 3 RQ4: Longitudinal Analysis of Version Updates and Fragmentation
We attempt to perform a longitudinal study on security risks by revisiting the 7 apps (GCash, mPay, MOM, Zuum, Oxigen Wallet, Airtel Money, and mCoin) which have been systematically studied by Reaves et al. , with confirmed weaknesses. We downloaded all available versions of 6 apps (mCoin is excluded since history versions are not publicly available.), and obtained 88 different versions in total, i.e., GCash (6 versions), mPay (20 versions), MOM (22 versions), Zuum (12 versions), Oxigen Wallet (12 versions), and Airtel Money (8 versions). All versions span more than two years.

GCash has a sharp decline from v2 to v3 in terms of the number of weaknesses. Three weaknesses are patched, the hard-coded encryption key, insecure SecureRandom, and privacy leakage to SD Card. Reaves et al.  found that the vulnerabilities still remain in the updated version in 2016. However, according to our security reports, GCash fixed most of the vulnerabilities in their latest version. In contrast, the weaknesses of Oxigen Wallet significantly increase from v5 to v7 due to the changes of app features. More specifically, many new weaknesses (i.e., WebView DB Leakage, ICC Leakage, MITM Attacks, and Insecure SecureRandom) were introduced, which had not been discovered by Reaves et al. . They compared the code similarity between the 2015 and 2016 versions of each app, and found some apps have significant amounts of new code . This aligns with our study that many banking apps do not perform systematic security checks before delivery.

Furthermore, we find banks encounter the version fragmentation problem especially when they release versions to different markets by countries. We selected the top 5 banking apps based on the S&P Global Market Intelligence report  across their 30 different versions, i.e., Citibank (10 versions), HSBC (3 versions), Deutsche Bank (3 versions), Banco Santander (8 versions), and ICBC (6 versions). By comparing the differences of weaknesses between these versions, we observe the following: (1) A subsidiary bank, incorporated in the host country but owned by a foreign parent bank, usually launches its original financial services with most of its products, such as banking apps, into the host market. As a result, a subsidiary bank inherits the weaknesses from the original version of its parent bank. This observation is evidenced by the South Korean version of Citibank app and the Macau version of ICBC app (see Figure 8). (2) Due to the business difference, culture difference, and expertise of security teams, weaknesses of apps vary across different markets by countries. This is also evidenced by the fact that the official app of HSBC (China) v2 has more weaknesses than that of HSBC (UK) and HSBC (Hong Kong). A possible reason might be that HSBC (China) is independent of the parent bank in terms of its app development outsourcing procedures and security teams, while in Hong Kong, as the former UK colony, HSBC (Hong Kong) largely follows the convention of HSBC (UK). Nevertheless, we find that not all subsidiary banks operate under the host country’s regulations in terms of the number of banking app security risks (Figure 8 shows the source and host countries of flows containing security weaknesses).

# Answer to RQ4.

By revisiting apps studied by previous research and further examining them across all their publicly available versions that have not been scrutinized before, we conclude that app developers are still not aware of these weaknesses perpetually. Furthermore, apps owned by subsidiary banks are always less secure than or equivalent to those owned by parent banks, for which the assumption that subsidiary banks operate under the host country’s regulations does not always hold true.