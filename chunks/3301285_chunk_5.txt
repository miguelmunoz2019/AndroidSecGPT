# A Survey on Various Threats and Current State of Security in Android Platform
# 2 Attacks Targeting Bootloader
Bootloader is a vital program that is responsible for performing some crucial tasks whenever a system is switched on like initiating the operating system and some other kernel processes. In current mobile phones bootloaders, apart from performing essential functions, are also responsible for maintaining the security of the device. One of the primary tasks of the bootloader is to ensure the integrity of the Chain of Trust (CoT) policy of the system. According to CoT policy, the bootloader has to verify the integrity of processes in each stage during booting before the execution of the processes. The booting process is supposed to be invulnerable to kernel attacks where attackers gain complete control over the kernel, and it should be able to maintain CoT policy of system even in a compromised system. That is a situation where the bootloader is expected to perform its intended functions while taking malicious input from attackers. Many factors hinder the bootloaders from performing its functions and also make them vulnerable to attacks. Most of the vulnerabilities exist due to flaws found in coding and implementation of bootloaders. Redini et al.  have discussed few such vulnerabilities and how attackers exploit them. They have proposed a hybrid method called BOOTSTOMP. It is a multi-tag taint analysis method that comprises features of both static and dynamic method to defend the system’s bootloader from attacks by identifying the hidden vulnerabilities that are present in it.

CVE-2014-9798 and CVE-2015-8893 are vulnerabilities found in the Qualcomm bootloader. The attacker can impose denial of service attack on the system using a malicious application to exploit this vulnerability of bootloader in which it does not verify the address relationship in between Tags and Aboot. Information about the patch is available on the Android security bulletin site . BOOTSTOMP was able to identify CVE-2014-9798 vulnerability present in previous versions of Qualcomm devices that could be exploited by the attackers. BOOTSTOMP also exposed severe other security vulnerabilities in the Huawei and NVIDIA’S bootloader. These vulnerabilities allow attackers to run arbitrary code, perform privilege escalation, corrupt memory, and impose buffer overflow or denial of service attack on the system. It is crucial for developers to design bootloaders keeping in consideration these security issues . Running arbitrary code by initiating memory corruption in bootloader code, attackers can gain control of Trusted Execution Environment of the system. Bricking and Unsafe unlock are other method used by attackers to attack the system.

# 2 Attacks Targeting the Device Driver
The device driver is an interface that enables communication between software and hardware. In a system, there are many hardware components, and for each component, there is a unique driver installed in the system. Each driver has specific functions. These functions allow the operating system and other programs to interact with the hardware and accordingly eliminate the need of knowing complex hardware details.

Device driver vulnerability allows an attacker to breach the driver and ultimately crash the system by gaining control over the kernel or make the system unusable. One of the main reasons for security vulnerabilities in the device driver is that developers implement drivers with the only objective that driver must function accurately without giving focus on the possible vulnerabilities in the code that can be exploited by attackers. When a company releases a driver in the market, attackers can easily find out the security gaps in the code. So it is vital for developers to implement drivers keeping in consideration security features that need to be employed . In Android, bugs are mostly found either in a root driver or drivers of applications like Camera, Wifi, or Bluetooth, which are pre-installed in the device . There are large numbers of Android phones in the market, and they have different hardware components with different drivers. There is always a notable gap between the time any vulnerability is exposed and the patch to fix it is released. So, attackers effectively utilize this time gap for exploiting the vulnerability found in the driver and launch attack against the system. Such attacks are called time of check to time of use (TOCTOU) attacks. This vulnerability arises when driver and user have direct access to user data buffer.

ACM Computing Surveys, Vol. 52, No. 1, Article 21. Publication date: February 2019.

P. Bhat and K. Dutta
There are chances that both may be accessing and updating data buffer simultaneously. Attackers are also imposing attacks like denial of service, buffer overflow attack, privilege escalation attack, network traffic-based attacks on the system by exploiting the vulnerabilities found in the driver code. In 2016, researchers of Zlab explained how two vulnerabilities, CVE-2016-2435 and CVE-2016-2411, found in NVIDIA Video and MSM Thermal driver, respectively, affected Android version 6 (Marshmallow) in a Nexus device. Attackers use a malicious application to gain root access to the system by exploiting NVIDIA video driver vulnerability (CVE-2016-2435). Attackers can corrupt memory values and, finally, launch a privilege escalation attack against the system. After gaining the complete access over the system, the attacker can disclose users’ confidential data or collapse the system by exhausting the resources. CVE-2016-2411 is a security flaw that includes two drivers, Qualcomm power management kernel and MSM Thermal driver. A cluster_id is passed to MSM Thermal driver function msm_thermal_process_voltage_table_req from userspace without validation. The cluster_id is given an out-of-range value by attackers that results in heap overflow. Eventually, attackers can gain root access by privilege escalation and can also fail the security offered via SELinux . The implementation flaws are present in both the kernel and external driver (example Qualcomm, PowerVR). CVE-2018-9417 and CVE-2018-5838 are the latest vulnerability reported  that are found in a kernel USB driver and OpenGL ES driver a Qualcomm component, respectively. Both vulnerabilities allow attackers to launch a privilege escalation attack against the system by using the malicious application to run arbitrary code. Shen  has shown a step-by-step procedure to exploit Trusted Execution Environment (TEE) used by Huawei HiSilicon. A vulnerability in driver /dev/tc_ns_client is exploited to get access to kernel privileges. Attackers execute arbitrary code and use a “_FPC_readImage” system call to get images of fingerprints from the device, bypassing the RTOSck (TEE’s kernel) security test. In Reference  the author has discussed common flaws in driver codes and how the attackers exploit them. Developers must strictly follow the list of “dos” and “don’ts” while designing the device driver to maintain the security of the system . Analysis of few of these attacks is summarized in Table 2.

# 2 Hardware Abstraction Layer-based Attacks
This layer includes library modules that implement interfaces for Camera, Bluetooth, Wi-Fi, GPS, Radio, and other components in the Android system . Attackers target the interfaces and use these components to peek into the system. In Broadcom Company’s Wi-Fi chipset, which is present in most Android and iOS devices, attackers found a highly dangerous vulnerability that allowed the attacker to get control of the complete system by using Booby-Trapped Signals . Later a patch for this vulnerability was released. Researchers  have exposed severe vulnerabilities in Wi-Fi security protocol WPA2 that is used in most of the modern operating systems, including Android version 6 (Marshmallow) and higher. This vulnerability is present even in iOS, Windows, and OpenBSD. Researchers have also listed the vulnerabilities found in the WPA2 that are exploited by attackers by using a novel method of attack known as Key Reinstallation Attack (KRACKs). For exploiting this vulnerability, the attacker needs to be within the Wi-Fi range of the target system. This attack can be used to steal the confidential data of the victim and can even decrypt the encrypted file in the system. Attackers can use applications to spy on the user’s data using Audio Channels, GPS, Camera, and other components. Google Play Services offers some unsafe features to the applications that can be exploited by the intruders. Some of these features are by default enabled by the service. If the user disables them, then it will affect the normal functioning of the fundamental features of the system. A brute-force attack is used to intrude into the Android file system, which stores the system’s private keys. The attack targets the kernel by cracking the system passwords.

ACM Computing Surveys, Vol. 52, No. 1, Article 21. Publication date: February 2019.

# A Survey on Various Threats and Current State of Security in Android Platform
ACM Computing Surveys, Vol. 52, No. 1, Article 21. Publication date: February 2019.