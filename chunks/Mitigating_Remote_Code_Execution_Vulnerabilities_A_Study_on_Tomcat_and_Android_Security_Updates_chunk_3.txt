# VII. CONCLUSION AND FUTURE WORK
We have conducted a detailed analysis of the updates/patches (i.e., code-changes) that were applied by programmers to mitigate/fix fifty-one (51) RCE vulnerabilities reported in two Java-based software projects: Apache Tomcat and Android.

Based on our analysis, we proposed a list of five common updates/patches (see Table II through Table VI) that can be used to mitigate or fix a significant majority of RCE vulnerabilities in Java-based systems. We believe that our findings about these common RCE updates/patches can be
Pseudocode for RCE Update Type 4status = function();if (status != SUCCESS) {variable1 = NULL;return ERROR;}variable1 = new class;variable1->size = sizeof(object);
Pseudocode for RCE Update Type 5if (noOfPatches > 0) {int target = array[x].targetStartBand + array[x].numBandsInPatch;int size = (64 - target) * sizeof(FIXP_DBL);if (!useLP) {for (i = startSample; i < stopSampleClear; i++) {function1(&array2[i][target], size);function1(&array3[i][target], size);}} elsefor (i = startSample; i < stopSampleClear; i++) {function1(&array2[i][target], size);}}
handy and readily-usable when programmers are trying to determine ways or means to fix RCE vulnerabilities in their own system. Therefore, we anticipate that our list of common RCE updates (shown in Tables II to VI) will help in reducing the time that is required by programmers to fix RCE vulnerabilities that have been reported in their system. To our knowledge, this is the first study of its kind that has focused on analyzing RCE vulnerabilities and their relevant updates/patches.

The results from this initial investigation are anticipated to be beneficial in reducing RCE attacks and hence the results motivate further research in the area. We plan to extend our research to other programming languages and systems to determine if such update (i.e., code-fix) patterns exist in systems coded in languages such as Python, PHP, C#, etc.

Once this research is extended to other languages and systems, the natural evolution of this research is to study more vulnerabilities such as Elevation of Privilege, Information Disclosure, and SQL Injection in the future. In closing, our intent is to continue to learn about the nature of vulnerabilities and how to mitigate/fix them so that we may enhance our research to help prevent future exploits or attacks..