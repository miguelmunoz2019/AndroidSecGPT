# Short Text, Large Effect: Measuring the Impact of User Reviews on Android App Security & Privacy
Duc Cuong Nguyen∗CISPA, Saarland University ∗, Michael Backes†, Sven Bugiel†∗, Erik Derr†CISPA Helmholtz Center i.G.

# Abstract
Application markets streamline the end-users’ task of finding and installing applications. They also form an immediate communication channel between app developers and their end-users in form of app reviews, which allow users to provide developers feedback on their apps. However, it is unclear to which extent users employ this channel to point out their security and privacy concerns about apps, about which aspects of apps users express concerns, and how developers react to such security- and privacy-related reviews.

In this paper, we present the first study of the relationship between end-user reviews and security- & privacy-related changes in apps. Using natural language processing on 4M user reviews for the top 2,583 apps in Google Play, we identified 5,527 security and privacy relevant reviews (SPR). For each app version mentioned in the SPR, we use static code analysis to extract permission-protected features mentioned in the reviews. We successfully mapped SPRs to privacy-related changes in app updates in 60% of all cases. Using exploratory data analysis and regression analysis we are able to show that preceding SPR are a significant factor for predicting privacy-related app updates, indicating that user reviews in fact lead to privacy improvements of apps. Our results further show that apps that adopt runtime permissions receive a significantly higher number of SPR, showing that runtime permissions put privacy-jeopardizing actions better into users’ minds. Further, we can attribute about half of all privacy-relevant app changes exclusively to third-party library code. This hints at larger problems for app developers to adhere to users’ privacy expectations and markets’ privacy regulations.

Our results make a call for action to make app behavior more transparent to users in order to leverage their reviews in creating incentives for developers to adhere to security and privacy best practices, while our results call at the same time for better tools to support app developers in this endeavor.

# I. INTRODUCTION
Application markets such as Google’s Play or Apple’s App Store are core components in mobile software ecosystems. They constitute centralized markets for developers to distribute their apps and for end-users to search, download, and purchase applications. Similar to online retail markets, end-user reviews are a key element to the success of app markets. Users that have used an app can write reviews—short text messages typically including a star-rating—to express their opinion about an app and help other users to choose between similar apps. At the same time, reviews can also be used as a direct feedback channel to app developers, e.g., to express feature requests or to report bugs and security issues. The app developers, in turn, can react to this feedback and reply to their users.

Although user reviews form a direct communication channel between users and developers, past research on security and privacy protection has—to the best of our knowledge—not given this channel any attention. Prior research focused instead, for instance, on providing users with support in choosing less risky apps or on helping users making informed decisions whether or not to grant permissions to an application. Although such support is undeniably valuable for helping users, we believe that those also form short-term solutions that do not immediately tackle the root cause of developers releasing apps that disregard privacy best practices. For apps to improve their security- and privacy-related behavior in the long-run, feedback should not only be directed to end-users but also to developers, ideally in a way that the developers have incentives and motivation to update their apps according to the security and privacy concerns of their users. User reviews would seemingly form such an immediate feedback and rating channel for security- and privacy-related user concerns. Unfortunately, the extent to which reviews can provide this kind of feedback and how developers react to such feedback have not yet been investigated.

To answer those questions, we first build a crawler to collect the complete version histories of the top 2,583 apps (62,838 app versions) on Google Play and their corresponding 4M user reviews. We then use supervised learning techniques to identify 5,527 security and privacy relevant reviews. By retargeting the release dates for both the app versions and the reviews, we connect those SPR with the corresponding app version that was mentioned in the SPR. Using static code analysis, we classify the changes between those user-reviewed app versions and their immediate successor versions as SP-relevant when later app versions behave more privacy-friendly. Using recent advances in statically detecting third-party libraries, we are able to attribute those SPU to either app or library code changes. Using this data set, we then set out to thoroughly examine the impact of user reviews on the SPU of android applications. We build a statistical regression model that takes different factors into account that could affect the update of an app, including users’ variables (e.g., ratio of SPR received, and review star rating) and app variables (e.g., permission mechanism, the ratio of replies to reviews, and app category).

to our entire data set of reviews and app histories, we are able to show that SPR are significant predictors of SPU in Android applications. This means the more SPR an app version receives, the more likely the subsequent version of the app will be an SPU. Additionally, our results show that of all SPU, only 17% could be uniquely attributed to app code while 48% could be uniquely attributed to (closed-source) third-party code, meaning that in most cases SPR complained about app behavior that was added to the app through inclusion of third-party code. Furthermore, through statistical testing, we confirm that app versions that use Android’s run-time permission dialogs raise more suspicion from users, expressed through a significantly higher rate of SPR for those app versions (1 times more than for install-time permissions).

Based on those results, we conclude that SPR indeed have a positive influence on the privacy-related development of apps and that there is a clear call for action to not only support users in making better choices but also making app behavior explicitly more transparent to users to foster higher rates of SPR that express users’ privacy attitudes and create incentives for developers to adhere to privacy best practices. Developers, on the other hand, clearly need support in this task, in particular in estimating the impact of included third-party code onto their apps’ privacy-critical behavior.

# In summary, we make the following contributions:
- We investigate security- and privacy-relevant features in apps that can be perceived by end-users (e.g., permission requests and data accesses) and map them to permission-based functionality that can be extracted from apps.

- We build a longitudinal repository of 2,583 applications and their 4M user reviews. We build a classifier to identify SPR with a very good accuracy (mean AUC value of 0). By retargeting app release dates, we can map SPR back to their affected app versions in 88% of all cases.

- We statically extract permission-based features from apps mentioned in SPR and identified SPU of apps in 60% of all SPR. Further, 48% of those SPU can be attributed exclusively to (closed-source) libraries.

- We build a statistical regression model to evaluate the impact of different factors on apps’ SPU, including users’ variables and app variables.

- Our approach reveals that SPRs are a significant predictor of SPU of Android apps and that apps supporting runtime permissions dialogs receive 1 times more SPRs than apps with install time permissions.

# Outline:
This paper is organized as follows. We give an overview of related work in Section II and describe our methodology in Section III. We empirically analyze our data in Section IV and explain our regression model to predict SPU in Section V. We discuss our findings and draw actionable items in Section VI and conclude in Section VII.

# II. RELATED WORK
Android security, and in particular application security and the role of developers in the mobile ecosystem, have been studied from different angles in the past. To put our study on user reviews and their connection with the security and privacy evolution of apps into a larger context, we present and discuss in this section briefly related works on using natural language written texts for app classification, app reviews in general and their automatic processing, as well as closest related developments in app security.