# 5 XLDH Libraries in the Wild
Prevalence of XLDH. Our study reveals that XLDH activities are indeed trending among the real-world apps. Altogether, we detected 42 distinct XLDH libraries integrated in more than 19K apps and targeting at 16 SDKs. Apps including XLDH libraries, as discovered in our research, are found in 33 categories on Google Play. As shown in Table 7, over 35% of apps are in the categories of game and entertainment. Those apps have been downloaded more than 9 billion times in total on Google Play. Among all affected apps, some are highly popular with more than 100 million downloads.

Historical versions of XLDH libraries. To understand the evolution of XLDH libraries’ behavior, we collected their old.

Versions, and then investigated the change of their malicious functionality. Specifically, we gathered historical versions of XLDH libraries from the library websites, Maven repositories  and GitHub . In this way, we found 495 versions from October 31, 2011 to February 12, 2020 for all the 42 XLDH libraries. After that, for each XLDH library, we monitored the code change related to malicious cross-library data harvesting by checking its fingerprints (e.g., class names of the reflections, forName and getMethod) across different library versions.

We selected 7 XLDH libraries (com.ad4screen, com.onradar, ru.wapstart, io.radar, com.devtodev, com.yandex.metrica and com.inmobi), which had at least three versions recorded in our dataset, to look at their trend individually. Figure 7 illustrates the maliciousness of XLDH libraries across different versions. We observe that libraries tend to have XLDH code in their newer versions. Among them, com.yandex.metrica and ru.wapstart began to release the XLDH versions since late 2014. Interestingly, we found that after Oct. 2019, the versions of io.radar and com.devtodev removed the XLDH function to steal users’ Facebook data. We believe that this is at least in part thanks to our report to Facebook, Twitter, and Google Play (in October, 2019), which then warned the vendors of the offending libraries. Also, in 2018, com.inmobi released the version without XLDH to stop collecting Google activity recognition data. This could result from the attempt to comply with GDPR.

To understand the presence of XLDH library in the wild, we performed a longitude study of the Google Play apps with XLDH libraries com.oneaudience, com.devtodev and io.radar from January, 2015 to December, 2019. All of these libraries stealthily access app users’ Facebook data (e.g., gender, birthday, visited place, etc.). Specifically, we started from the 2,076 apps (out of the 1 million set), which are found to have integrated the above libraries, and fetched the historical versions of these apps on  to evaluate the presence of XLDH libraries in each version. In this way, we were able to collect 936 apps with 5,732 versions. Among them, 1,976 of the versions were affected.

# 5 Dissecting Infection Operations
Most targeted SDKs. Figure 9 shows the victim SDKs and the number of XLDH libraries (top 20 XLDH libraries based on the number of apps integrating them) that attack them. Google ads service is the most commonly affected SDK, followed by Facebook login and Twitter login. Among victim SDKs, 7 of them are OSNs, 2 are advertising and tracking platforms, 6 are instant messaging service, 1 is cloud service.

Given the list of victim SDKs, we observe around half of them are in the category of online social network (OSN). It suggests that high-profile OSN platforms present an invaluable...

com oneaudience (Appeai) litical, health groups the users followed, timeline, etc. can be used to create the users’ psychographic profiles, as suggested by recent Facebook political scandal ; similarly, the data of Twitter, LinkedIn, Amazon, including a user’s tweets, page likes, education background, celebrities she followed, purchase history, etc., can also be exploited by the adversaries to profile the user’s personality, values, opinions, attitudes, interests, and lifestyles. The risk is especially serious since we observed that data harvested through com.oneaudience indeed have been shared with a political and business advertising company Nielsen.

Evasiveness of XLDH libraries. In our study, all affected apps were published on Google Play, which means the XLDH libraries have bypassed the app vetting of the Google Play and the victim SDK vendors (e.g., Facebook and Twitter, if app review process exists). The result suggests that XLDH is a new type of threat not well understood before. To further assess whether existing techniques can detect XLDH libraries, we leveraged VirusTotal , which aggregates more than 70 antivirus products, to scan all the XLDH libraries we found. Interestingly, no single product in the VirusTotal can detect any XLDH libraries we found; in contrast, VirusTotal was known to be capable of detecting harmful libraries studied in prior works . More than half of XLDH libraries we found abused Java reflection to call the target SDK (see Section 2), which leverages a generic Java function, to implicitly call the target SDK API. Further, unlike regular code in Java that needs to import the target class (e.g., import com.facebook.AccessToken ), the malicious library does not have to explicitly import the target class. This makes the cross-library intention more evasive. Interestingly, in our study, we also observe that XLDH libraries strategically hide the data exfiltration channel to evade detection, as elaborated below.

able source of private user data to the XLDH adversaries. In our study, we observe the adversaries stealthily collect Facebook token, WeChat token and LinkedIn token, which can be used to access OSN-specific semantically-rich data. For example, we observe com.oneaudience and com.mobiburn stealthily access Facebook token and further leverage that token to fetch semantically-rich Facebook data, including Facebook ID, Gender, Email, Pages likes, Followed groups, etc. In particular, Facebook data, such as the pages likes, social, political, health groups the users followed, timeline, etc. can be used to create the users’ psychographic profiles, as suggested by recent Facebook political scandal ; similarly, the data of Twitter, LinkedIn, Amazon, including a user’s tweets, page likes, education background, celebrities she followed, purchase history, etc., can also be exploited by the adversaries to profile the user’s personality, values, opinions, attitudes, interests, and lifestyles. The risk is especially serious since we observed that data harvested through com.oneaudience indeed have been shared with a political and business advertising company Nielsen.

Dynamic exfiltration endpoints. In some XLDH libraries, we observed the adversaries remotely control the data exfiltration process, where the endpoints to receive the data and the time to exfiltrate data are configured to be dynamic. More specifically, at runtime, the XLDH library (e.g., com.mobiburn) fetches a remote configuration file, which specifies the endpoint (a URL) that data should be exfiltrated to, and when to do so. Such a treatment helps XLDH library evade the domain blocklist based blocking, once its server endpoint is on the blocklist and thereby blocked by local firewalls, ISP, etc.; not hard-coding the malicious endpoint can also render static vetting less effective. Furthermore, a dynamic, controlled exfiltration schedule gives the adversaries better control to evade detection, e.g., no exfiltration during vetting.

Hiding data exfiltration in crash reports. Another in-
4146 30th USENIX Security Symposium USENIX Association
# 5 XLDH Library Distribution Channels
Behind the popularity of XLDH libraries are the promotion mechanisms that XLDH vendors take to attract app vendors. To understand their promotion and distribution channels, we searched the library websites, news reports, and analyzed the code and harvested data of XLDH libraries, and summarize their distribution channels as below.

- Pre-installed libraries. As mentioned in Section 5, we observe that XLDH libraries were widely pre-installed in the apps, which were generated by free app building services (e.g., appsgeyser , duksel ). For instance, 18% of the affected apps of com.devtodev were generated by the duksel , whose apps show similar package name pattern “com.duksel.(\W*\w*)*free".

- Embedding in other libraries/services. Another important channel to distribute malicious libraries in real-world apps is to be integrated by other popular libraries or services. As mentioned earlier, the vendor of com.appsgeyser, AppsGeyser, is the biggest free Android app builder on the market  who integrates XLDH libraries in the Android apps it created. Interestingly, we found that com.appsgeyser appears 34% and 29% of the time with com.onaudience and com.yandex, respectively. Hence, the users of apps generated by AppsGeyser face the risks of exposing Facebook and Twitter user data and Google Advertising IDs and device IDs. As another example, we found the XLDH library com.mobiburn included another XLDH library com.onaudience. So any app integrates the former library could silently include the latter, increasing the chance of XLDH-library distributions. This was observed in 8 older versions of com.mobiburn, released from April 11, 2018 to June 17 2019 (v1 to v1). This might come out of the collaboration relation between the XLDH developers.