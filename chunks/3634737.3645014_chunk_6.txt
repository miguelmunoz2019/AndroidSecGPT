Our responsible disclosure efforts involved active engagement with the security teams at Google and Samsung, focusing on the identified security vulnerabilities. We reported our findings to Samsung Electronics developers responsible for Android system UI and Google’s Issue Tracker team. Samsung Electronics acknowledged the issues and promptly addressed them in OneUI 4, which is shipped in the latest Samsung smartphones. Google recognized our report as a potential abuse of the accessibility service but not as a software bug vulnerability. Due to the stance of Google’s Android security team on UI overlay attacks and the accessibility team’s emphasis on the legitimate use of overlays, it appears challenging to fundamentally restrict the use of the accessibility service in the Android operating system. Therefore, we have decided not to publish our attack implementation code.

The ethical considerations extended to our user study. We employed a non-invasive approach, utilizing our specially prepared.

# (In)visible Privacy Indicator: Security Analysis of Privacy Indicator on Android Devices
# ASIA CCS ’24, July 1–5, 2024, Singapore, Singapore
Pixel smartphones instead of participants’ devices. The study focused on interactions with the camera application and privacy indicator awareness. No personal data from participants were collected. Demographic data collection was limited to gender and age range to ensure participant anonymity and privacy. We had contacted our institution’s IRB prior to our user study. Our internal review of the institution’s IRB terms indicated that our experiment is not subject to an IRB review, and we indeed received an informal confirmation to proceed with the study.

# Proposals for trusted component changes
We have demonstrated how attackers can launch deceitful privacy indicator attacks. Motivated by the serious consequences of attacker control of the camera and microphone, and the reported cases of such control being perpetuated through compromised system components, we proposed a prototype defense called SEPI. SEPI’s TCB resides in the hypervisor and TrustZone to withstand a complete system compromise and maintain the trustworthiness of the privacy indicators.

However, there are limitations in the design due to the restrictive development environment of the vendor-provided hypervisor and TrustZone implementations. Specifically, the design challenge in establishing SEPI’s security model is the necessity of DoS mitigation compared to conventional DRM security solutions. This is because the involvement of untrusted EL1 and EL0 components in SEPI’s data flow may hinder the security guarantees since the untrusted components may not comply with privacy indicator rendering requests.

We propose two trivial but imperative changes to Samsung and Qualcomm’s secure hypervisor and TrustZone implementations. First, the hypervisor must be able to directly invoke the TrustZone, which holds exclusive rights to the secure buffer. Second, the contents of the graphics framebuffer directly consumed by the display device must also be available in TrustZone’s address space. This can be achieved by having the hypervisor create a duplicate memory mapping of the region into the TrustZone memory space.

With these two changes, SEPI’s design can incorporate an additional DoS attack mitigation as follows: The hypervisor detects device status changes and requests the EL0 and EL1 components to render the indicator with TrustZone’s involvement with the secure buffer, as done in our current design.

The hypervisor then directly invokes the TrustZone afterward to validate the active framebuffer to inspect the EL0 and EL1 components that have correctly serviced the hypervisor’s request. We plan to cooperate with the vendors of trusted components for DoS-resistant DRM design with the above-mentioned proposals.

# Android software stack
The SEPI architecture via the hypervisor relies on communication paths between the Android software stack (EL1 and EL0). The TrustZone composition also involves EL0 in allocating and enqueuing a secure buffer. While the current SEPI solution is generally effective, it still faces the risk of OS compromise since it cannot completely exclude the Android surface. To enhance the security against OS compromise, additional measures such as utilizing TrustZone and hypervisor can be considered.

One such measure is to utilize the Trusted Boot Chain (TBC). The TBC is a series of security checks performed during device boot-up to ensure system integrity and protect against security threats. Verification is performed on all components, including the bootloader, operating system, system services, and applications.

If TBC verification fails in TrustZone, the hypervisor can utilize its high privilege to block hardware-level access to the camera or microphone from the Android OS, preventing any malicious use of these devices and ensuring a secure environment. However, the best research direction for achieving stronger security would be to find an Indicator solution that completely excludes the Android surface.

# Indicator design
Adversaries can obscure the Android privacy indicator (green dot) by overlaying it with a visually similar green battery icon, as shown in the UI overlay attack demonstration (available at https://www.youtube.com/shorts/1eiqnjZ8Foo). The green battery icon’s striking and captivating appearance makes it harder for users to notice the green privacy indicator. SEPI enhances protection against UI overlay attacks by ensuring the highest Z-order, superseding the deceptive status bar created by the UI overlay attacks discussed in this research. However, even with SEPI, attackers can still impede user recognition of the privacy indicator through UI overlay attacks like DOA. Thus, it is crucial to not only prioritize the indicator’s position at the top of the Z-order but also to employ an icon design that resists seamless blending with its surroundings.

Previous studies, such as those by Amrutkar et al.  and Zhang et al. , highlight the essential role of privacy indicators in mobile applications. However, considerations regarding UI design are beyond the scope of this paper. Consequently, we did not conduct a user study and underscore the necessity for further comprehensive evaluations to accurately assess the effectiveness of SEPI.

# Various image formats
The current implementation of SEPI utilizes a 32-bit RGBA format, assigning 8 bits (ranging from 0 to 255) for each color channel to represent the color information of every pixel. This is a standard practice in digital image processing. In order to support more complex UI components, drawing images in formats such as PNG or JPEG onto the surface created with the PIXEL_FORMAT_RGBA_8888 attribute may be beneficial. However, before drawing image data onto the surface, the corresponding image must first be loaded into memory and decoded . Open-source libraries such as  and libjpeg  can handle PNG and JPEG image file formats, respectively. These libraries are compatible with TrustZone, which means that SEPI can be extended to support more image formats. This will ensure the integrity of the application’s generic UI components, in addition to the privacy indicator.

# ASIA CCS ’24, July 1–5, 2024, Singapore, Singapore
Yurak Choe, Hyungseok Yu, Taeho Kim, Shinjae Lee, Hojoon Lee, and Hyoungshick Kim
# 8 RELATED WORK
# Spyware
Spyware is malicious software that collects users’ data and personal information on mobile devices, often for malicious purposes such as identity theft and financial gain. A study analyzed the actions of various spyware applications (e.g., Spyhuman , TruthSpy , mSPy , Cerberus , Flexispy , Mobistealth , Spyfone , Retina-X ) and found that they pose a significant threat to user privacy. Most of these applications support invisible camera and microphone access, which allows them to record users without their knowledge or consent. To avoid detection, spyware applications often use methods such as creating an invisible preview, accessing the camera’s output without displaying a preview or using an invisible WebView to stream live videos. They may also use native code to circumvent Android’s limitations on audio recording or employ various workarounds to capture downlink audio from phone calls and third-party applications like WhatsApp. Therefore, providing security measures such as the Android privacy indicator against such spyware is essential.

# Transplantation attacks
Researchers have presented a method called transplantation attack  that can be used to collect users’ personal information through the Android camera service. The camera service is a system service that provides access to the camera hardware for camera applications. To perform a transplantation attack, a malicious application would first create a new camera service with the same name as the legitimate one. This new camera service would then be granted the same system permissions as the legitimate one. The malicious application could then use the new camera service to take pictures or record videos without the user’s knowledge or consent. In addition to creating a new camera service, a malicious application could modify an existing camera application. This would allow the malicious application to take pictures or record videos using the modified camera application, even if the user has not granted the application permission to do so. Transplantation attacks are a serious threat to user privacy. They allow malicious applications to take pictures or record videos without the user’s knowledge or consent. This can track users’ movements, collect sensitive information such as passwords and credit card numbers, or even blackmail users.