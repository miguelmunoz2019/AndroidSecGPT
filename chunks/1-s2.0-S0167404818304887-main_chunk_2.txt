# 4. Study design
The study was designed to identify issues that programmers face as well as to observe how those issues affect them while they are using JSSE API for application development. Conducting a user study is a widely known method for identifying usability issues of APIs (Acar et al., 2017a; Clarke, 2004; McLellan et al., 1998; Piccioni et al., 2013). Therefore, we designed a user study to identify usability issues of JSSE API. In a user study for API usability, participants will complete some tasks using the API which is being evaluated (Acar et al., 2017a; Clarke, 2004; McLellan et al., 1998; Piccioni et al., 2013). The objective is to identify usability issues that participants experience while doing such tasks. We employed two techniques to identify usability issues.

# Computers & Security 80 (2019) 54â€“73
ability issues that users encounter while using the API, which are popular in API usability community. Those are:
- Cognitive dimensions questionnaire based method.

- Think-aloud method.

Cognitive dimensions questionnaire based methodology (Blackwell and Green, 2000; Clarke, 2004; Wijayarathna et al., 2017a) is the only methodology that has been proposed as a systematic approach to evaluate the usability and identify usability issues of security APIs . The Cognitive Dimensions Framework presents a set of dimensions that describe aspects of a tool or an API that impact its usability (Blackwell and Green, 2000; Clarke, 2004; Wijayarathna et al., 2017a). We used the version of Cognitive Dimensions Framework proposed by Wijayarathna et al. (2017a) in this study, which consists of 15 cognitive dimensions. This framework is embedded to the usability evaluation process through the cognitive dimensions questionnaire (Blackwell and Green, 2000; Clarke, 2004; Wijayarathna et al., 2017a). In the evaluation process, few users of the API (i.e. programmers) have to complete some tasks using the API individually and then answer the questionnaire based on their experience (Blackwell and Green, 2000; Clarke, 2004; Wijayarathna et al., 2017a). In this way, evaluators can get an idea about each aspect of the API that is covered by the Cognitive Dimensions Framework from questionnaire responses and identify usability issues of the API. Even though the use of this framework and methodology is not validated through empirical evidence yet, it seems to provide good results for security API usability evaluations (Wijayarathna and Arachchilage, 2018; Wijayarathna et al., 2017b). We decided to use it as it is the only methodology that has been proposed so far to evaluate the usability and identify usability issues of security APIs.

We used think-aloud method  to get more insights into issues that were identified by the cognitive dimensions questionnaire method and how those issues affected programmers. Using two different techniques helps to improve the reliability of data we collect . Furthermore, we expected that it would help us to identify a broad range of usability issues exist in JSSE API.

Even though researchers such as Acar et al. (2017a) used System Usability Scale (SUS)  as the measurement of user satisfaction in their usability evaluations, we did not use it because of its non-diagnostic nature. We intended to identify usability issues of JSSE API and using non-diagnostic methods such as SUS does not provide any help in this case.

We decided to conduct the study as a remote study, since conducting a lab study with professional software developers often encounter obstacles, such as high cost and low response rate. We requested participants to record their computer screens and think aloud output while completing the task, so we can observe how they completed the task by looking at the recordings.

This study was approved by the Human Research Ethic Committee of our university.

# 4. Task design
Even though a wide range of user studies have been discussed and conducted to evaluate usability of APIs (Acar et al., 2017a; 2016; Clarke, 2004; Naiakshina et al., 2017; Wijayarathna and Arachchilage, 2018; Wijayarathna et al., 2017a), still there is no proper discussion on how programming tasks should be designed to use in the evaluation. In a study conducted by Naiakshina et al. (2017), they had to conduct 3 pilot studies to design a task due to the lack of guidance available on that. Therefore, we designed a programming task to closely match with the real world use cases of JSSE API. We identified the basic but common use cases of the API by referring to JSSE reference guide (2017b). We designed the task based on use cases that were available there, but also tried to get participants to use most components/classes of the API. Furthermore, we tried to make it less complex and less time consuming, so participants are likely to complete the task before they lose their interest, but still complex enough to be interesting and to allow some mistakes.

In the task, we provided participants with Java source codes for a socket client (Appendix D) and a server (Appendix C) that communicate with each other insecurely. Participants were asked to secure the communication between the server and the client by integrating TLS using JSSE API. Task description we provided for participants is available at Appendix B.

We also provided them resources that are required to complete the task such as keystore and truststore files. We requested participants to refer any learning resources they want while completing the task, so their experience would be similar to what they would do in their real life work as a software developer. Knowledge sources they used were also observed in screen recordings.

# 4. Participants
We recruited programmers with Java experience from Github to participate in the study. We used Github to recruit participants rather than recruiting participants from our university or local software development firms to get a more diverse sample of programmers. Furthermore, recruiting participants from Github helps to get participants with more experience in software development, which improves the ecological validity of the study . We used GitHub API1 to get a list of GitHub repositories and then filtered repositories that use Java as the main language. We used a script2 written in Selenium3 for this. We extracted publicly available email addresses of contributors to these repositories and sent emails inviting them to participate in our study. We offered them a $15 Amazon gift voucher as a token of appreciation for the participation. Furthermore, we offered them the opportunity to subscribe to get notified about outcomes of our research. In the invitation email, we included a link to sign up for the study with a filtering questionnaire (Appendix A). Furthermore, we informed them that participation is voluntary and participants can withdraw from the study at any time.