A threat to external validity arises from the limited number of projects we selected. All projects involved have a substantial number of issues, but we accept that the results may not be generalised to other projects. Due to our limitation, we only analysed a random portion of all the issues. We accept the possibility that the results may differ if we consider all the issues. Still, we mitigated this by using a statistical technique used in other similar work [71–73] to obtain a significant sample size.

# 7. Related work
# 7. Human values in discussion artefacts
Developer discussions have become an object study that may relate to some values, such as security and energy preservation. For example, Alqahtani and Rilling  propose an approach to discover and tag security concepts in open source issue reports. Another study investigated commit messages to understand how developers address energy consumption in Android applications . Although related, these previous works may not discuss security and energy preservation as values. Even if we presume that these previous works considered values, only a limited number of values were discussed. In this study, we perceived those aspects as values and not limiting ourselves to specific values by including any human values found in developer discussions.

Emotions are considered as a motivational domain to pleasure value in the early version of the Schwartz values model . Emotions are also considered as a source for values importance . The presence of emotions has also become an object study in developer’s discussions. For example, Ortu et al.  provided a manually labelled dataset of developer’s emotions in issue comments. Another example, Werder and Brinkkemper  developed a tool to extract emotions from developer discussions in commits, pull requests, and issues from GitHub. Similarly, Ding et al.  developed a tool based to discover emotions in terms of developers’ sentiment in issue comments. Another study investigated emotions identified in security discussions from commits and pull requests . Those previous studies of emotions focused on developers’ values in terms of how developers behave and interact during application development. The previous works’ perspective is quite different from the perspective that we used. In this study, we used the app-to-user perspective that captures the users’ concerns towards the application. Even though the perspective is different, the techniques presented in previous works on emotion detection have the potential to be utilised and extended to develop automated tools for the detection of human values.

# 7. Text analysis for human values
Analysis of human values has also been conducted on text documents. For example, Cheng et al.  analysed the Net neutrality debate to identify the values of each stakeholder involved. Their subsequent work  then emphasised how two values, namely wealth and innovation, are presents on the opposite side of the debate. Another study analysed human values in social media texts (i.e. Twitter) responding to several controversial topics and discovered how those values are expressed in this informal communications . Similarly, Koepfler et al.  utilised frame analysis to discover human values in social media debates. Another recent work, Perera et al.  classified 1,350 publications in top SE venues to determine if a publication is addressing values or not. These previous works support the possibility to analyse text documents for human values. However, to the best of our knowledge, no study has analysed developer discussions as a means to understand human values consideration in software development.

# 7. Text analysis for non-functional requirements
In Section 5, we discussed that some values that we discovered in issue discussions are similar to non-functional requirements (NFRs). Regarding this, a number of studies were conducted to analyse and identify NFRs from software development artefacts. For example, Jha and Mahmoud  analysed user reviews of iOS applications and found 40% of the reviews have at least one type of NFRs. Another study was conducted by Zou et al.  discovered in Stack Overflow discussions that usability and reliability are the most unresolved and thus mostly discussed NFRs. These previous studies focused on app reviews and Stack Overflow discussions, leaving other artefacts, such as issue discussions, open for further investigations.

Some studies also developed automated techniques to identify NFRs from software development artefacts. For example, Tóth and Vidács  conducted experiments of automated NFRs classification using the PROMISE dataset. They discovered that Multinomial Naive Bayes gave the best performance among other classification methods implemented in the Scikit-Learn library. Abad et al.  discovered that implementing preprocessing techniques, such as POS, entity, and temporal tagging, could improve NFRs classifications’ performance. They also proposed that the Binarised Naive Bayes method gave the best classification performance for the PROMISE dataset. Other studies developed automated techniques to classify NFRs on app reviews. For example, Lu et al.  proposed a feature extraction technique called augmented user reviews-bag of words (AUR-BoW) to improve NFRs classifications’ performance. Another study by Jha et al.  proposed a dictionary-based classification technique to classify NFRs on app reviews. Although these automated techniques were developed for NFRs classification, these techniques can potentially be utilised to develop automated tools to detect human values.

# 8. Conclusions and future work
This paper performed a case study on 1,097 issue discussions collected from three Android projects to understand human values in software development artefacts. Our findings show that value themes could be found in issue discussions (33% of the inspected issues). We discovered 20 value themes comprising themes that directly corresponded to Schwartz’s values (human value themes) and themes that could not be easily mapped to Schwartz’s values (system value themes). The human value themes that we found could be mapped to seven out of 19 Schwartz’s values. Additionally, we also propose a mapping between system value themes with Schwartz’s refined values in the contexts of three applications. Finally, we proposed descriptions for each value theme to inform and empower software practitioners towards integrating human values during software development.

# A. Nurwidyantoro et al.

# Information and Software Technology 141 (2022) 106731
This study can also be considered as an initial study to identify factors that influence values in a software project. We found that the emphasis on certain values in a software project plays a role in the values’ presence. Functionalities of the application may also contribute to the presence of some themes. For example, the sense of belonging theme was only found in an instant messaging application. Our study also contributes to a dataset  that has labelled values for 1,097 issues with 5,615 posts to develop automated value discovery tools.

The possibilities to find values in software development artefacts open up several directions for future work. For example, it opens up the possibilities to compare the level of attention to values on different projects. It also enables an opportunity for automation that allows larger-scale studies. Another direction can also investigate the presence of human values as part of the quality assurance of software.

# Declaration of competing interest
No author associated with this paper has disclosed any potential or pertinent conflicts which may be perceived to have impending conflict with this work. For full disclosure statements refer to https://doi.org/10/j.infsof.

# A. Nurwidyantoro et al.

# Information and Software Technology 141 (2022) 106731.