- Listen for screen changes: When the display content changes, accessibility events, TYPE_WINDOW_STATE_CHANGED or TYPE_WINDOW_CONTENT_CHANGED, are triggered. In the attack app, an accessibility service is built to monitor these two accessibility events from the wallet app by setting the accessibilityEventTypes field and packageNames field.

- Obtain displayed contents: Starting from the UI node that has display change events, we perform a depth-first traversal to get the text of all the contents on the changed interface.

- Sensitive information is identified from the obtained texts in accordance with the predefined rules (the rules shown in Table 2).

To show the experimental result, the obtained mnemonic and private key are displayed through a floating window on top of the application. If the displayed character is 40-bit hexadecimal or contains 12 words, it represents a private key or complete mnemonics. Thus, the attack is successful. As shown in Fig. 3, for both imToken and the Huobi Global Wallet, our attack can access the sensitive information using accessibility service.

IEEE Network • November/December 2020
# No. Message Type Coin Type Acquire Rule
# Back up mnemonic phrases
# A ttAck #2: cApture user I nput vIA usb debuGGInG
The /dev/input/ folder contains various user input events for the Linux operating system, including input generated by touch screen, solid buttons, sensors, and so on. A typical Android app does not have permission to read the contents in the folder. However, the shell user performing USB debugging has such permission. Reading input files via USB debugging allows one to get keystroke inputs from a physical keyboard.

However, today’s Android devices rarely have physical keyboards. For a virtual keyboard, which is more common nowadays, the attack app needs to determine user input by obtaining touchscreen events. For example, the /dev/input/event3 file contains various touchscreen events, each of which contains the corresponding touch coordinates on the screen. Combined with the layout of the virtual keyboard, the attack app can determine which key the user is pressing on the soft keyboard. If the attack app only targets for the sensitive input information, it needs to determine whether the user is currently conducting sensitive input, for example, entering the password via the soft keyboard. Also, the attack app needs to know the type of soft keyboard used. For the virtual keyboard of the common input method, the keyboard layout and the key positions are relatively fixed. It is easy to convert the coordinates into the corresponding keys.

Some apps provide more secure input methods whose key positions are randomly changed every time users input. In such cases, screenshots, video recordings, or the accessibility features mentioned above can provide useful information about the timing and the keyboard layout.

The Huobi Wallet is such a wallet with its own random keyboard layouts. This secure keyboard is used when users need to enter a password in Huobi Wallet, which effectively prevents the third-party input method from accessing the password. The layout of the number keyboard is randomized. Huobi Wallet requires that the password should contain capital letters, lowercase letters, and numbers. The unknown layout of the number keyboard poses a great challenge to the attacker even if he knows every touch coordinate.

Huobi wallet’s security keyboard does not trigger TYPE_WINDOW_STATE_CHANGED events when there is a click on the keyboard. However, by configuring the IncludeflagNotImportantViews in accessflagibility, changes in keyboard layout will trigger TYPE_WINDOW_STATE_CHANGED events. Therefore, by listening to this event, the attacker app can get the current keyboard layout, including the coordinate area for each key. At this point, if the attacker app can obtain the user’s screen click positions through many ways, for example, USB debugging and suspension window, the exact input can be calculated by combining the keyboard layout and click positions.

Our attack app successfully obtained the layout information of the security keyboard of the Huobi Global Wallet via accessibility service. Combined with the background processes generated by USB debugging, the attack app successfully calculated the user’s input password. The experiment results are shown in Fig. 4, which shows the input value and the value of the keyboard layout and means that the success of the attack.

In the first experiment, we used accessibility service to dynamically detect changes in the display content of the device and obtain UI node content to steal user privacy information. In our daily life, users may use a game plug-in in order to play phone games better, or use some apps to grab tickets. In these cases, accessibility service is needed. Of course, these apps cannot be obtained from official channels, and thus can be exploited by adversaries. In the second experiment, we successfully read the user input from a device linked with a computer, with USB debugging enabled. Often, these two scenarios can be seen in real life, which alerted us to study the current status of cryptocurrency wallet security.

# conclusIon And outlook
With the growing enthusiasm for cryptocurrencies based on blockchain technology, the security of cryptocurrency wallets is becoming more and more important. We have analyzed the risk of Android wallets from the perspective of wallet attack surface and Android features. From the experimental results of two popular cryptocurrency wallets, it shows that although cryptocurrency wallets provide different levels of security, there are still vulnerabilities that can be exploited by attackers.

118 IEEE Network • November/December 2020
In order to guarantee the security of cryptocurrency wallets on Android, it is important to reinforce the wallet with the system’s new security features, prevent application supply chain contamination, and prevent repackaging attacks. In addition to Android cryptocurrency wallets, the security concerns of iOS cryptocurrency wallets, PC wallets, and hardware wallets are also non-negligible, all requiring further research.

# Create Wallet
Please set security password
# Biographies
Daojing He [S’07, M’13] received the B.Eng. (2007) and M. Eng. (2009) degrees from Harbin Institute of Technology (China) and the Ph.D. degree (2012) from Zhejiang University (China), all in computer science. He is currently a professor in the School of Software Engineering, East China Normal University, P.R. China. His research interests include network and systems security. He is on the editorial board of several international journals such as IEEE Communications Mag.

SHiHao Li received the M.Eng. degree from the School of Software Engineering, East China Normal University, P.R. China.

Cong Li is currently a master student in the School of Software Engineering, East China Normal University, P.R. China.

SenCun Zhu is an associate professor in the Department of Computer Science and Engineering at Penn State University (PSU). He received the B.S. degree from Tsinghua University, the M.S. degree from the University of Science and Technology of China, and the Ph.D. degree from George Mason University in 1996, 1999, and 2004, respectively. His research interests include wireless and mobile security, software and network security, and fraud detection. He is the editor-in-chief of EAI Transactions on Security and Safety, and an associate editor of IEEE Transaction on Mobile Computing.

Sammy Chan [S’87, M’89] received his B.E. and M.Eng. Sc. degrees in electrical engineering from the University of Melbourne, Australia, in 1988 and 1990, respectively, and a Ph.D. degree in communication engineering from the Royal Melbourne Institute of Technology, Australia, in 1995. Since December 1994 he has been with the Department of Electrical Engineering, City University of Hong Kong, where he is currently an associate professor.

WeiDong Min [M’12] received the B.E., M.E. and Ph.D. degrees in computer applications from Tsinghua University, China in 1989, 1991 and 1995, respectively. He is currently a professor and the Dean, School of Software, Nanchang University, China. He is an Executive Director of the China Society of Image and Graphics. His current research interests include image and video processing, artificial intelligence, big data, distributed systems and smart city information technology.

Nadra Guizani is a clinical assistant professor and a Ph.D. candidate at the School of Electrical and Computer Engineering at Purdue University. Her research interests include machine learning, mobile networking, large data analysis, and prediction techniques. She is an active member of both the Women in Engineering program and the Computing Research Association..