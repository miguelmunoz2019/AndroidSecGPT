Unlike previous surveys , this article not only discusses the attacks and methods to defend them but also focuses on the underlying vulnerabilities in the Android system and the poor developer practices that contribute to the proliferation of attacks. This study also pays particular attention to the problems in the Android infrastructure. The article puts forward problems present in the permission system of Android and how this leads to various vulnerabilities and attacks, such as privilege escalation. The article outlines various attacks relating to libraries in combination with privilege escalation attacks; these kinds of attacks have become rampant recently, but they had not been addressed in previous surveys , for example, attacks relating to intra-library collusion. This article also provides possible solutions to the problems arising due to intra-library collusion. This study also discusses the role of the certificate authority and its importance for secure SSL connection. This article also presents a picture of the current state of the defensive mechanism of Android against malware. This article discusses the various types of anti-virus software and also gives a comprehensive analysis of static and dynamic approaches to malware detection along with their limitations. Android is currently one of the most used operating systems in the world, having various components and compatible applications running in the thousands. This study tries to cover many areas of this vast system and provide a comprehensive analysis of it from a security perspective.

# 2 ATTACKS ON THE ANDROID SYSTEM
This article classifies attacks into four different categories based on the components of the Android device targeted:
- Hardware-based attacks
- Kernel-based attacks
- Hardware abstraction layer-based attacks
- Applications-based attacks
ACM Computing Surveys, Vol. 52, No. 1, Article 21. Publication date: February 2019.

# Attacks on Android Devices
# Application Layer Architecture
# Attacks on Android Devices
Various sources. All these applications use the Application Programming Interface (API) provided by the application layer to interact with the system. The Hardware Abstraction Layer (HAL) consists of several library modules. Each library module provides an interface for specific hardware components. The kernel is the core of the system; it is responsible for the proper functioning of all the components in the system. The hardware layer consists of hardware components that are in-built into the system. Each hardware component has a specific interface that is used for interaction with the component. The malware developers devise various approaches to gain control of the system, which may include an attack on one or several of these layers, exploiting their vulnerabilities. This section provides a detailed explanation of these attacks and various vulnerabilities exploited by the malware developers. Figure 2 provides a further classification of the attacks that are also discussed with examples in this section.

# 2 Hardware-based Attacks
In this layer, attackers target the vulnerabilities found in the hardware components. Most of the vulnerabilities exist because of the preinstalled vulnerable components in the device provided by the manufacturers. It is tough to protect the system from attacks that target such components. These vulnerabilities are very difficult to patch, because the patches are available with the distributors and carriers only. Another possible way to attack the Android system is to exploit the security weaknesses found in the repaired components. Shwartz et al.  have shown how using repaired Android components like touchscreen, sensors, and near-field communications (NFC) readers from unauthorized vendors rather than from original vendors, called original equipment manufacturers (OEMs), can put the integrity of the system at stake. They have shown in their
ACM Computing Surveys, Vol. 52, No. 1, Article 21. Publication date: February 2019.

# A Survey on Various Threats and Current State of Security in Android Platform
article how attacks like touch injection and buffer overflow use unauthorized components to exploit the vulnerabilities of the device and attack the system. Authors have also pointed out that designers must keep this aspect in consideration when implementing a system where replaced components fall inside the trust periphery of the system. It must be essential for the system to check the integrity of the communication between the replaced component and central processor of the system. Also, the component driver’s source code should not implicitly assume that the component hardware is authentic and trustworthy.

A Rowhammer attack is an example of a hardware-based attack. The attacker uses malicious JavaScript in the browser (like Firefox) to attack an Android phone. The preliminary requirements of this attack are the installation of a malicious application in the targeted device and access to graphics processing unit (GPU) used in the device, and to speed up the attack the attackers can also use the attack speed chip’s cache. To launch this attack, the attacker needs to access a specific memory location or a row in memory inside a dynamic random access memory (DRAM) chip. Hamming this row number of times causes a small amount of electrical current to leak from the target location. It results in a change in the state of memory bit or memory leak . GLitch is the latest form of Rowhammer attack that allows an attacker to hack the target device remotely. GLitch is so named because attackers use WebGL, a library that renders interactive graphics code within any browser that is compatible with WebGL. These graphics can trigger a well-known glitch found in memory chips, namely DDR3 and DDR4. Attackers launching a Glitch attack exploit the GPU. The main reason for using the GPU is that its cache can be easily administered by the attacker, which gives them easy access to target rows , which is otherwise tricky if CPU is used instead of GPU, as used in previous versions of a Rowhammer attack. Another attack that falls under the same category is Deterministic Rowhammer Attacks on Mobile Devices (Drammer). The target component is DRAM chips. Attackers use the malicious application to exploit DRAM chips and can get access to the kernel of the devices. To date, there is no patch available to safeguard Android from these attacks entirely.

RAMpage (CVE-2018-9442) is a vulnerability, found in hardware components (LPDDR2, LPDDR3, or LPDDR4) of RAM, that implements attacks like Rowhammer. The attackers use the same strategy of using a malicious application to exploit these vulnerabilities. The strategy is to break the memory allocator ION (unified memory management interface). Once the attacker executes the attack successfully, he or she can get access to the restricted memory location in the device. The attacker can leak sensitive information from the victim’s device and can also get complete control over the system . GuardION is an open source technique proposed by Veen et al. This tool mitigates the threat caused by attacks like Drammer. GuardION protects the Android kernel by defending DMA allocations from these attacks. DMA allocations are shielded using rows that are empty, which results in isolated bitflips. Thus this technique helps in reducing Drammer and similar attacks . QuadRooter vulnerability as the name suggests is a combination of four vulnerabilities that poses a threat for Android devices that use Qualcomm chipset. The four vulnerabilities are
- Linux IPC router binding any port as a control port (CVE-2016-2059)
- Ashmem vulnerability (CVE-2016-5340)
- Use After Free Due to Race Conditions In KGSL (CVE-2016-2503, CVE-2106-2504).

Attackers can launch a privilege escalation attack using a malicious application and gain root access by exploiting any of these four vulnerabilities. The drivers that manage communication between different components of the chipset for their devices are also at high risk. Since the vulnerability is present in the drivers installed in the devices, the patch to fix the vulnerability can
ACM Computing Surveys, Vol. 52, No. 1, Article 21. Publication date: February 2019.

P. Bhat and K. Dutta
only be availed from distributors or carriers of the component, which in turn is provided to the distributors or carriers by Qualcomm . Analysis of these attacks is summarized in Table 1.

# 2 Kernel-based Attacks
A kernel is the heart of the Android system. Attacks targeting kernel are aimed at getting root access to the system and can cause severe damage. The Linux kernel  is directly or indirectly responsible for every action performed on the system and also for the management of different components of the Android system. The Linux kernel also takes care of Android runtime environment functionalities. Attackers are continually working in the direction of exploiting vulnerabilities in the kernel and related components like device drivers, memory, and Android Runtime (ART). Android has come out with many security features that include Android Sandbox, secure Inter-Process Communication (IPC), Encrypted File System, Cryptographic APIs, and so on ; still, many vulnerabilities continue to be exposed. In the recent past, the Android system has faced highly severe attacks exploiting vulnerabilities found in all these security features.

Next, the article will discuss attacks exploiting vulnerabilities found in different components of kernel.