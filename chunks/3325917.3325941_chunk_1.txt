# PUREDroid: Permission Usage and Risk Estimation for Android Applications
Ali Alshehri, Pawel Marcinek, Abdulrahman Alzahrani
Oakland University, Rochester, MI 48309 USA
aaalshehri@oakland.edu, pbmarcin@oakland.edu, aalzahrani@oakland.edu
Hani Alshahrani, Huirong Fu
Najran University, Najran, Saudi Arabia
hmalshahrani@nu.edu.sa, fu@oakland.edu
# ABSTRACT
Android applications pose many security risks that affect the security and privacy of their users. Adversaries construct different types of malicious applications and use different social engineering approaches to attract users to download and trust these applications. Malicious applications usually request permissions that are not related to their main functionality in order to access sensitive information or resources. Most of users attempt to grant the requested permissions without understanding the potential harm of those applications and how the requested permissions can be misused to disclose their privacy. Therefore, there is a need for a risk assessment model which can intimate the users about the risk level of permissions requested by an application in order to assist users to make the right decision whether to grant or deny a requested permission. This paper proposes Permission Usage and Risk Estimation for Android (PUREDroid) to measure the security risk of Android applications’ permissions and the magnitude of harm resulting from granting extraneous permissions requests. In an evaluation with more than 25000 applications, including 5773 malware applications and 19242 benign applications, we demonstrate the usefulness and the effectiveness of our proposed scoring method.

# CCS Concepts
- Security and privacy ➝ Malware and its mitigation.

# Keywords
- Android, permission model, analysis, privacy, risk score
# 1. INTRODUCTION
Among different smartphone platforms, Android has become the most prevalent and fastest growing platform . Android devices, of which millions are in use today, are attractive target for adversaries. Therefore, a worth considerable effort is ensuring the Android operating system security, which has imposed a significant interest among researchers to alleviate its threats. Built-in security mechanisms in Android operating system (OS) provide various levels of protection for data and applications. For instance, application security is governed by a list of permissions used to permit an application to communicate with public resources (e.g. camera and Bluetooth) or highly privileged APIs (e.g. read or send SMS).

It is essential for an application to access sensitive information in order to operate properly. Thus, during the application development stage, required permissions must be declared. However, Android permission model does not have specific gauges that developers, who even are not fully knowledgeable about permissions, have to follow when they declare their applications’ permissions . Hence, most of Android applications developers requesting multiple permissions that might be unnecessary for the main functionality of their applications. However, most users grant the permissions requested by the applications without understanding the potential harm of those applications and how the requested permissions can be misused to disclose their privacy.

Furthermore, the Android permission model does not impede privilege escalation or information leakage. In other words, the permission model is not fine-grained enough to provide sufficient means of control on an application’s activities and specify what private information or resources are accessible to the application . Thus, many attacks could possibly occur by exploiting critical permissions, such as privilege escalation sabotages . These challenges are important because there is no standard of which permissions should be requested by which application. Therefore, applications’ developers can request any permission even if it is not related to the application’s main functionality. Unscrupulous developers are fully aware of the Android permissions model’s vulnerabilities that they can exploit to gain unauthorized access or abuse sensitive resources . This could impose costs on Android users’ privacy if a malicious application uses an overly broad permission to perform inappropriate operations.

Android applications in the marketplaces are classified based on their functionality, referred as category. Applications within the same category should share common features and seek similar intents in general. For instance, requested permissions within applications from the same category are most likely consistent . However, malicious applications perform deviant behavior that is far from what they claim and could request permissions that are not related to their main functionality. Thus, this paper proposes a new assessment method to measure the risk of requested permissions within an application based on the application category.

# Constructing an Optimal Set of Permissions for Each Category
Each permission within an application from the same category will be assigned into one of three security risk regions; low, moderate, or high risk score. Also, this paper argues for the need of Android permission model readjustment to lock down unauthorized operations. Briefly, this paper makes the following contributions:
- Analyzing a dataset of Android applications and investing the usage of Android permissions requested by benign and malicious applications.

- Introducing a new scoring method based on the application category to evaluate the security risks of permissions within an application.

- Conducting extensive evaluation to prove the usefulness and the effectiveness of our scoring method.

The reminder of the paper is organized as follows: Section 2 discusses the background of Android OS. Then, Section 3 provides an overview of the related work. Next, Section 4 explains our methodology and approach in-depth. After that, Section 5 discusses the evaluation and results of our model. Finally, Section 6 concludes our paper and presents our future work.

# 2. BACKGROUND
The security of Android system was designed with multiple layers to deliver flexibility, especially for the developers to build secure applications, and sufficient protection for all users of the platform. Android provides some security mechanisms to protect users, such as application sandbox and permission model.

Each application runs in an isolated sandbox. Any application wishes to communicate with another application or access any sensitive resources must have the appropriate permission. Hence, permission model is used to protect the communication between applications and the Android OS and restrict access to sensitive information, which would be otherwise compromised . Applications’ developers have to declare all permissions they need for the application in the AndroidMainfest.xml file to be granted by the user.

In addition, run time permissions were introduced to allow applications to request permissions as needed at run time. However, the permission model can grant an over-privileged permission to an application because a single permission handles a varying set of APIs. For example, if READ_PHONE_STATE permission is granted to an application, the application can obtain varying phone information, such IMEI, SIM card serial number, Sim card operator, and device ID . Consequently, applications can access more resources than what they need and the user cannot approve a part of this permission.

# 3. RELATED WORK
In this section, variety of research attempts are discussed, which have proposed the concept of risk scoring to evaluate Android applications and permissions. The pattern of application’s permission request has been studied to generate risk indication to improve users’ awareness for the potential malicious activities. For instance, Gates et al.  introduced a new method to generate risk signals based on the permissions requested by an application to provide users with feedback about why the application is risky. The risk score is measured using different Bayesian probabilistic models to satisfy three goals, namely, monotonicity, coherence, and ease. Based on their experimental results, the authors stated that using Naive Bayes with informative Priors (PNB) generates a better risk score comparing to the other Bayesian probabilistic models. However, the authors consider a limited set of Android permissions in their study. Another limitation is that the malware dataset used to evaluate their method is very small and the applications categories are unknown comparing to the used benign dataset, which can impact the reliability of their approach.

Deypir  proposed a new approach to measure the security risk score of Android permissions based on the concept of information theory and entropy. For each individual permission, the information gain is computed by calculating the entropy of the entire used dataset and the entropy of the permission within the dataset. In this approach, larger risk score is assigned to the permission that are more informative. However, the author neglected the applications categories of the analyzed applications, which negatively affect the risk score since applications from different categories represent different functionality. In addition, information gain has symmetric property, which can incorrectly assign a high risk score to a permission that is mostly used by benign applications.