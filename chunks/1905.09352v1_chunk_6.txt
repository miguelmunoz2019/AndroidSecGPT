Given that, we separately analyze the following two different groups: Patched vulnerabilities that have only one reference and the others that have more than one reference. For the public repository disclosure date, we use the date that is indicated as publish date on the CVEDetails web page. Our level of granularity to capture these three dates are year and month. Therefore, we do not consider the exact calendar day of release/publication in our analysis.

In our analysis, we use the symbols B, C and D to denote the patch release date, fix-commit date, and public repository disclosure date, respectively. To express the sequence of these three dates, we separate them with “-” if they happened at different times. The date on the left side of “-” is earlier than
the date on the right side. For example, C − B − D means that the commit occurred first; then, the patch was released, which was later followed by public repository disclosure. If two dates are not separated by “-” (e.g., BC), then they are in the same month. For instance, BC − D means that patch release and last commit are in the same month, and the public repository disclosure is after them. Table 10 shows the frequency of all the time sequences that we observe in the Android ecosystem.

According to Table 10, of 632 patched vulnerabilities, only 66 followed the ideal time sequence C − B − D. However, 530 of them follow a near ideal sequence, the only difference being that the patches are released and publicly disclosed in the same month. Therefore, 94% of the vulnerabilities are patched no later than their disclosure date in public repositories. The remainder, on the other hand, have different timelines. The most problematic one is the vulnerability being disclosed in public repositories and then receiving a patch, which is represented by D − C − B and DC − B in our dataset (4%). For instance, CVE-2017-6983 was published in September 2017  and its last commit date is on August 2018. However, it was disclosed in public repositories on May 2017. Similarly, CVE-2017-13078 was published in November 2017 , but its disclosure date in public repositories and its last commit data are in October 2017.

Similarly, Table 11 shows the frequencies of time sequences for patched vulnerabilities that have more than one AOSP reference. In other words, in this table, each patched vulnerability has more than one last commit date. Based on Table 11, the majority of the patched vulnerabilities still follow the same timeline. Sequences C − BD and C − B − D contain 304 out of 321, i.e., 94% of total commits that belong to 125 different patched vulnerabilities. This shows that for the majority of patched vulnerabilities we do not see potentially dangerous practices. Particularly, the disclosure date is not sooner than the patch time. CVE-2014-6060, published in April 2016, is the one vulnerability corresponding to C − D − B . This vulnerability was disclosed in public repositories in September 2014, and one of its two references has June 2014 as the last commit date. The other reference is in September 2014, which is the same as the public repository disclosure date. In addition, vulnerability CVE-2014-6060 is the only one that fits more than one time sequence. Since the first commit is in June 2014, it fits C − D − B. It also fits CD − B because the second commit is in September 2014, which is the same as its public repository disclosure date. The other vulnerabilities fit only one time sequence each.

Considering these two tables, the majority falls into C − B − D and C − BD which is a secure practice. However, there are some exceptions. For example, CVE-2014-6060 follows the following two time sequences: C − D − B and CD − B. For this patched vulnerability, the difference between disclosure date in public repositories and patch release date is around 1 years. However, these two aforementioned tables do not indicate the actual time gaps. Therefore, we further analyze the last commit, public repository disclosure, and patch release dates. The main goal is to determine the distribution of time gaps between these three points in time. Figure 11 shows these dates for all patched vulnerabilities that have public repository disclosure dates and have at least one AOSP reference. Note that, if there is more than one reference, we calculate the time differences for each of them. For example, if a patched vulnerability has two references, there are two different time results that specify the comparison of both patch release date and disclosure date in the public repository. Table 12 shows the means and standard deviations of the results represented in Figure 11. For the analysis of disclosure date of the public repository and patch release date, we analyze 758 patched vulnerabilities. For both analysis of patch release date - last commit date and disclosure date of public repository - last commit date, we analyze 954 patched vulnerability references. The reason for having more patched vulnerabilities for the last two analyses is due to multiple references for some patched vulnerabilities.

According to the Figure 11, there are no negative values
# Time Differences Between Last Commit, Public Disclosure and Patch Release Date
For the time differences between the patch release date and the commit date. In other words, patch release dates occur after the commit date for all patched vulnerabilities. This is expected since a patch release date indicates when a patch is available for a particular vulnerability; it should also occur after its last fix-commit date. The mean of this time gap is 61 days. In other words, for publishing a vulnerability patch after making the last fix-commit, Google spends an average of around 62 days (2 months). However, there are some extreme cases. The longest time gap is 640 days which belongs to CVE-2014-6060, which we already mentioned above. The second longest time gap is 639 days belonging to CVE-2016-1621. It is published in March 2016  and disclosed in a public repository in the same month. However, it has 3 different references. Although two of them have the same last commit dates , the third one has a date of June 2014.

For the time differences between the disclosure date in a public repository and the patch release date, even though we see large variation, from lower than -600 days to around 488 days, the majority of them, i.e., for 639 vulnerabilities, occurs at the same time. In other words, 84% of them are disclosed at the same time in a security bulletin as in a public repository. 10% of them have positive values which means that they are disclosed in public repositories after the patch release date. In total, around 95% of them are disclosed in a public repository after or at the same date as the patch release date. The mean of this time difference is equal to -2, i.e., very close to zero. Around 5% of them have a negative value. In other words, they are publicly disclosed before Android published them on its security bulletins, which is the same date when Google provides its patches. Even though this occurs for a limited number of vulnerabilities, it is a potentially dangerous case which puts many devices at risk considering that a vulnerability has been published publicly but the patch has not been provided.

Lastly, we investigate the time difference of disclosure time in a public repository and the last commit date. 94% of them have a positive value meaning that they are publicly disclosed in a repository after the last commit is made. For 66% and 12% of our total samples, the time differences are 60 and 30 days, respectively, which we can also see in Figure 11. The mean value for this time difference is equal to 54. Hence, it takes around 2 months for public repositories to disclose a vulnerability after its last commit date. Note that for 3%, i.e., 34 of them, the disclosure time in a public repository is even sooner than the last commit date. This means that a vulnerability has been disclosed in a public repository while the fix has not been yet finalized. This gives an attacker an advantage to compromise Android devices.

Based on our above analysis, for the majority of vulnerabilities, these three time sequences follow the pattern which can be considered secure. However, there are some instances that put the security of Android devices at risk. All of these instances show that a vulnerability has been introduced in public repositories when the patch is not available or even before the last fix-commit in Google Git. Even though these instances are not common, i.e., about 5%, the potential consequences might be significant. It follows that we need better coordination between Google and public repositories with respect to their time management in announcing vulnerabilities.