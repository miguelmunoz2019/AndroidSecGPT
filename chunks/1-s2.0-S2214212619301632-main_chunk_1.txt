# Journal of Information Security and Applications 48 (2019) 102358
# Contents lists available at ScienceDirect
# Journal of Information Security and Applications
# ELSEVIER
# journal homepage: www.elsevier.com/locate/jisa
# Security analysis of third-party in-app payment in mobile applications
Wenbo Yang, Juanru Li, Yuanyuan Zhang, Dawu Gu∗
Department of Computer Science and Engineering, Shanghai Jiao Tong University, Shanghai 200240, China
# a r t i c l e i n f o
Article history:
Available online 23 July 2019
# Keywords:
Mobile security
In-app payment
App vulnerability
Program analysis
# a b s t r a c t
The massive growth of smart mobile devices has attracted numerous apps to embed third-party in-app payment, which involves more sophisticated interactions between multiple participants compared to traditional payments. Therefore, such payment is error prone and could be exploited easily, leading to serious financial deceptions. To investigate current third-party mobile payment ecosystem and find potential security threats, we conduct an in-depth analysis against China–world’s largest mobile payment market. We study four mainstream third-party mobile payment cashiers, and conclude unified process models. We also summarize the security rules that must be regulated by cashiers and merchants and illustrate four types of attacks if violating these rules. Besides, we also detect seven cases of security rule violation on both Android and iOS platform. Our detection result shows that hundreds of popular apps violate at least one security rule, and hence face with various security risks, allowing attackers to consume commodities or services without purchasing them or deceiving others to pay for them. Our further investigation reveals that cashiers as well as merchants should be responsible for those vulnerable cases. We also performed proof-of-concept attacks in real world, reported these issues to all involved parties and helped them fix the vulnerabilities.

© 2019 Elsevier Ltd. All rights reserved.

# 1. Introduction
The past few years has witnessed the extraordinary development in mobile payment. The significant growth of smartphone promotes the usage of third-party mobile payment services in mobile apps. Compared to transaction processes with traditional payment channels (e.g., via credit card), transactions with third-party in-app payment are settled within mobile app conveniently. Users can pay their bills directly without switching to another app or web browser. To help apps use their mobile payment services, third-party cashiers are willing to provide such functionality for popular Android and iOS apps to fulfill in-app payment. The cashiers provide third-party payment SDKs (TP-SDKs) to mobile app developers, leading a straightforward integration of in-app mobile payment. As a result, more and more apps are using third-party in-app payment as their major payment channel.

Nonetheless, implementing a secure in-app payment is not easy. In-app payment is still in its incipient stage and is especially error-prone due to many issues such as the misunderstanding of app developers, the improperly designed services, and the ambiguity of documents or code samples released by cashiers. In addition, a process of third-party in-app payment involves more participants (user, cashier, and merchant), and the interaction steps compared to traditional payment processes is more sophisticated. Therefore, the potential attack surfaces for third-party in-app payment are much wider.

Previous studies on payment security [1–5] mainly focus on the security of e-commerce web applications other than mobile apps. Although numerous security flaws of e-commerce web applications integrating services of third-party cashiers had been revealed, on mobile platform the trust boundaries are redefined and the problems should be re-studied. The workflow of an entire in-app payment transaction is much more complex and the security analysis of e-commerce in web applications is unable to cover some new steps. Particularly, since the introduced mobile client plays an important role in this multi-party model, it is inadequate to directly employ traditional flaw detection of web applications on mobile apps. Client apps are generally considered untrustful since all the data handled by apps can be manipulated by an attacker with a rooted Android phone or a jailbroken iOS device. Hence, a comprehensive security analysis against third-party mobile payment must be re-designed.

To the best of our knowledge, there exists neither unified specification to regulate in-app payment process nor assessment approach to validate the security of them so far. Documents and samples...

ples of transaction provided by most in-app payment cashiers are insufficient or even incorrect. Analysts must reverse-engineer the binary code of an app and its integrated in-app payment SDKs to recover and assess the process. Therefore, it is expected to first summarize the status quo of current third-party in-app payment before searching potential security flaws. After that, the security analysis requires to conclude the basic security rules which should be obeyed by both cashiers and merchants throughout the transaction process as well as proposing corresponding violation detection methodology.

To investigate how widespread is insecure in-app payment in both Android and iOS apps, in this paper, we make a systematic study of the world’s largest smartphone and mobile payment market–China. A distinguishing feature of Chinese mobile payment market is that most apps in China only support third-party in-app payments. User cannot use other payment channels such as credit card or online bank to pay the bills. On the other hand, users in China also prefer to choose these third-party cashiers to manage their payments because these cashiers provide more services than traditional banks. With the help of those cashiers, users not only purchase goods or make investment conveniently, but also transfer to each other through their accounts for free. Nonetheless, the prevalence of third-party in-app payment also brings significant risks. Once these third-party payments are vulnerable, every in-app transaction is inevitably suffering severe security threats.

Our study tries to answer the following questions for our research targets: (a) What exactly should be done to implement a secure in-app payment? (b) Which kind of attack can be conducted and who suffers financial loss? (c) What is the quantity of app with insecure in-app payment and how to detect them? (d) What factors lead to an insecure implementation? To answer the above questions, we first conduct an in-depth analysis on services of four mainstream third-party cashiers. The results of our analysis include: (1) we unveil the details of their payment processes through reverse engineering of relevant SDKs and apps; (2) we conclude a series of security rules which satisfy the security requirements of in-app payment; (3) we illustrate severe consequences of violating these rules including four attacks against both online and offline transactions.

After the investigation into the services of mobile payment cashiers, we then develop a methodology to detect seven representative violations of our proposed security rules in Android and iOS apps, their integrated third-party payment SDKs, as well as servers of merchants and cashiers. We prove the prevalence of in-app payment through scanning 7145/10000 Android/iOS apps and pinpointing at least one in-app payment SDK in above one-third of the analyzed apps. We then detect 2679/3972 Android/iOS apps with payment and find hundreds of them vulnerable. In addition, none of the four cashier’s SDKs reach the requirement regulated by our proposed security rules. Even though the improperly designed SDKs do not directly lead to vulnerabilities, they would expand the effect of user deception attack. Through combining these flaws, various attacks can be constructed targeting both merchants and users, including shopping for free or with another user’s account. As a result, these flaws affect almost all aspects of daily life.

Finally, we investigated the root cause of the flawed implementations of in-app payments. To our surprise, we found the documents and sample codes provided by cashiers are often not carefully examined and confuse developers. Some of them are incorrect and even vulnerable, which directly lead merchants to these flaws. Different from previous works [1–4] that focus on the errors of merchants, our findings reveal that the cashiers also contribute to the flawed third-party payment on mobile platform. We have reported all the problems to the affected cashiers and obtained their credits.

# 2. Third-party in-app payment demystified
It is prevalent for modern apps to build their in-app payment functionality with the help of a third-party payment service provider. On the one hand, The costs would be too high for merchant to construct its own payment system. On the other hand, it is also unrealistic for users to create and manage their capital accounts in each app respectively.