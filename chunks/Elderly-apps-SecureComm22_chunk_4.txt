# 4 Improper Input Validation
9/146 apps are vulnerable to various injection attacks such as SQL/code injection, cross-site scripting. For example, Senior Dating by Lauber, GoldenApp, Caring Village and Generations Homecare System are vulnerable to reflected cross-site scripting attacks. An attacker can execute malicious JavaScript code to fetch elderly users’ detail or to phish them. We note that for this attack to work, a victim would first need to click on a malicious link crafted by the attacker. Empowerji, EZ Care and Tricella Health are vulnerable to SQL injection attacks, allowing an adversary to view, modify and delete any elderly user’s data. EllieGrid and Seniority are vulnerable to code injection. For this attack, we added a JavaScript sleep function in the request body and then observed the response time. When there was a delay of 10 seconds for the response after the sleep command of 10 seconds, we confirmed the code injection vulnerability. This is a very serious issue that can lead to complete compromise of the application’s data and functionality, and the server that’s hosting the application . Due to ethical reasons, we limit our attack in detecting this vulnerability. As there is no authentication secret on EllieGrid requests, the attacker can perform this attack remotely by constructing and sending the modified requests to the app’s server.

# 4 Server-side Security Misconfigurations
We found 16/146 apps with various security misconfigurations. Apps such as Doulikesenior, Carelinx, Pension Status Search Old Age Widow Handicap and Homage transmit HTTP requests to modify an object via unprotected GET requests, and thus are vulnerable to Cross-Site Request Forgery (CSRF) attacks, mostly executed via sharing/clicking a malicious link. We found that Over 40 Dating Mature has a file path manipulation vulnerability where we placed user-controllable data (the file path on the app’s server) into the URL path of the app’s request that might be used on the server to access local resources (which may be within or outside the web root). With this vulnerability, an attacker can modify the file path to access different resources, which may contain sensitive information. For legal and ethical reasons we did not test/validate this attack.

# 4 Dangerous App Permissions
Dangerous permissions grant an app access to personal user data (e.g., user’s location), or control over the user’s device. They are only granted after explicit user consent. We found a total of 598 dangerous permissions in 118/146 apps, i.e., an average of 5 dangerous permissions per app. See Table 3. Ianacare (caregiver app) and Life Assure (companion app for a tracking device) had the maximum of 11 dangerous permissions (Call Phone, Camera, Write External Storage, Read External Storage, Read Calendar, Write Calendar, Read Contacts, Write Contacts, Read Phone State, Access Coarse Location, Access Fine Location, Get Accounts, Record Audio). Access Fine Location permission is needed if an app wants to know detailed information about the user’s location, and respond accordingly. This is often used with advertising and location-based and social-network services like Facebook. Read Calendar allows an application to read the user’s calendar data. Calendar events can, and often do contain contact information. The top 2 dangerous permissions found were Write External Storage (92 apps) and Read External Storage (91 apps). Rarely used permissions found were Read Call Log (BIG Phone for Seniors), Receive SMS (Homedoctor Protección Senior), Get Tasks (DAGPS) and Write Call Log (BIG Phone for Seniors).

84/146 apps required Access Fine Location and 75/146 apps required Access Coarse Location permission. 61/146 apps asked for Camera permission, such as Petralex, Walk to End Alzheimer’s, GoutDietRecipes, Seniority, Aveanna EVV, and 401(K) - Retirement Planning. Apps with a significantly high number of risky permissions include Ianacare, 401(K) - Retirement Planning, Oscar Senior, Senior Safety App, CrescendoConnect, Trusted Senior Care and ClearCareGo.

# 4 Third-Party Libraries and Permissions
Types of Libraries. We found 122 unique third-party libraries and a total of 1008 libraries in 127/146 apps, for various purposes: app development (93/122), analytics (6/122), advertisements (6/122), and social networking (2/122). We
# Privacy Analysis of Android Apps for the Elderly
Found 34/146 apps with Facebook social media library and 14/146 apps with advertisement libraries, mainly Google Ads (9 apps) and Unity3d Ads (3 apps).

Libraries by App Category. A high number of total third-party libraries were found in 26 caregiver apps (218/1008 libraries), 20 EVV apps (162/1008), 16 location tracking apps (150/1008), 12 dating apps (107/1008) and 6 apps for Alzheimer’s (55/1008). This shows that the elderly who may need caring, or are unwell, or socially active may be more prone to privacy and data security issues arising via these third-party libraries. 48/146 apps have 10 or more unique third-party libraries. Examples of apps with a high number (>14) of unique libraries are Knee Arthritis Exercises (24), Theora Link (22), Walk to End Alzheimer’s (19), My SOS Family Emergency Alerts (18), Doulikesenior (17), Pension Status Search Old Age Widow Handicap (16), Tracki GPS (15), and Empowerji (15).

Kinds of Permissions Asked. We found 3 unique signature permissions asked by the libraries (Dump, Write APN Settings, Write Secure Settings). We found the Dump permission for example used by Firebase (64/146 apps), Glide (41/146 apps) and Facebook (32/146 apps) third-party libraries. Write Secure Settings permission was asked predominantly by Google Mobile Services (62/146 apps) and Firebase (62/146 apps). This Development Aid library permission allows an application to read or write the secure system settings. This permission should only be seen on Android system apps (and possibly wireless carriers or hardware manufacturer pre-installed apps) . Write APN Settings permission was asked by Google Play library (4/146 apps).

Enables communication between multiple apps of the same developer. Only granted if the requesting app is signed with the same certificate.

# 4 Static Code Analysis
Static code analysis with MobSF shows that 93/146 apps can read/write to External Storage; 84/146 apps execute raw SQL queries which may expose them to SQL Injection attacks; 71/146 apps use weak hash functions; 36/146 apps have insecure WebView implementation; and 12/146 apps have insecure SSL implementation, a critical security issue. Apps with all these five concerns are Alzheimer’s Disease Pocketcard, Big Keyboard & Notifications, Over 40 - Find People 50, Pill Reminder & Medicine App, Doulikesenior, Senior Safety App and Silver 50 Dating.

# 4 Apps with an IoT Device
We acquired IoT devices that operate with 3/24 IoT companion apps: EllieGrid, Carego Alphahom, Tuya SOS, and tested them to understand the relationship between the device and app. We analyzed the app behavior for the remaining 21/24 IoT companion apps, to the extent possible without the IoT device, and found issues in 7/24 apps. X-GPS Monitor, Family1st, BrickHouse TrackView and DAGPS are IoT companion apps which help family members track their elderly loved ones via IoT devices. All these 4 apps had 3 main issues: (1) improper authentication management, allowing an on-path attacker to sniff the username and password for full account takeover, (2) insecure session management, i.e., there is no use of authentication secrets in their requests, allowing an attacker to replay the requests, and (3) insecure PII transmission, leaking username and password in plaintext over HTTP. An on-path attacker can exploit these issues to track the exact location of users wherever they go with their IoT device due to full account takeover.

Tricella Health and EllieGrid are smart pill organizers which make medication management easier and are specifically designed to help the elderly by reminding them to take their pills on time (they consist of a pillbox and an app). Tricella Health has improper authentication management, where it is vulnerable to a remote OTP (3-digit number) brute-force attack during login and registration, leading to full account takeover. It also has improper input validation where its login requests are vulnerable to SQL injection attacks. These issues can lead to a remote attacker changing the user’s medications causing the user to take the wrong medications, skip doses or overdose.

EllieGrid’s physical pillbox is designed to store pills and receive reminders as ring notifications. The reminders and medications can be set up in its companion app. We found two major vulnerabilities in EllieGrid. Firstly, it offers a functionality to alert the elderly user’s caregiver via email and phone, when the pillbox is not opened on time. We note that there is no access control present in this functionality, and a remote adversary can completely tamper with the associated caregiver’s detail by using the caregiver profile setup option, which is present on the app UI. An adversary can enumerate a caregiver’s ID by brute-forcing, and then supply it to modify the caregiver’s email and send the alerts to an attacker under his control, which would allow him to track the elderly.