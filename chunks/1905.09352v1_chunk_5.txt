• Version 5 was introduced 6 months after version 4. However, version 4 stopped receiving updates just one month sooner than version 5.

• Version 4 was introduced 18 months sooner than version 6. But, it stopped receiving updates just 10 months before version 6.

• Version 6 was introduced one year after version 5. But, version 6 continues receiving updates only 9 months after version 5.

# Comparison of OS Versions in Release and EoL Time
For our sample, we can deduce that newer pairs of versions tend to have shorter gaps between EOL times in comparison to their release time gaps. In contrast, service for some older OS versions was abandoned comparatively early (i.e., for 4, 5, and 5), when compared to the gaps in release times with their successors.

Please note that our observations are based on a reduced sample size. On the one hand, AOSP versions 7 and higher are still receiving security updates and we cannot make any claim about them. On the other hand, Google started Android security bulletins in August 2015 and does not provide information before that.

# 5 Updated AOSP Versions vs. Affected Versions
In our security bulletin dataset, there are 782 CVEs that have AOSP versions on both the Android Security bulletin and CVEDetails. Among these 782 CVEs, different OS versions are listed on the bulletin and on CVEDetails for 483 of them. In this part, we do not focus on the quantitative analysis of these differences between Android security bulletins and CVEDetails. Rather, we focus on two examples and the implications of these differences.

The first example that we study is CVE-2016-5348, which was mentioned in the October 2016 Android security bulletin . According to the Android security bulletin, the updated AOSP versions are as follows: 4, 5, 5, 6, 6, 7. However, according to CVEDetails, the affected products for this CVE are as follows: 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 6, 6, 7. As we can see, the affected products in CVEDetails are more comprehensive and contain some older versions that are not in the list of updated AOSP versions in Android security bulletins, such as 4. Hence, this shows that Google does not provide security updates for all affected versions. The underlying reason is that a version has reached its end-of-life and does not receive security patch updates anymore. Therefore, the older versions of Android are at risk.

The second example is CVE-2017-0807, published in December 2017 . On Android security bulletin, the updated AOSP versions are listed as follows: 5, 6, 6, 7, 7, 7. However, in CVEDetails, the affected products are mentioned as follows: 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 7, 7, 7. Similar to the first example, Google does not provide security updates for all affected versions that are mentioned on CVEDetails, which puts many older devices at risk.

In the following subsection, we investigate the common CVEs among different versions and the possibility that some of them are applicable to older versions.

# 5 Common Vulnerabilities Among AOSP Versions
Before starting the analysis of common vulnerabilities among different versions, we introduce the term latent CVEs for an AOSP version. The latent CVEs for an AOSP version are all CVEs that affect that version but do not receive security updates like newer versions since the AOSP version has reached its end-of-life.

We analyze the number of common vulnerabilities among different AOSP versions based on the information in Android security bulletins (see Figure 9), however, paying attention to the fact that different versions receive security updates for a different amount of time. The Android security bulletins provide related information about patches, but note that the number of vulnerabilities for different versions varies a lot, see Figure 7. As a result, it is highly likely that some Android versions that already receive common patches have even more common vulnerabilities than is reflected in the bulletins.

We assume that information on the Android security bulletins correctly reflects the released patches. It is possible that some information about patched vulnerabilities is not communicated correctly on the Android security bulletins. In particular, that information about released patches for versions that have reached EOL is incorrect. However, we have found no evidence of such practices so far.

# Number of Common Vulnerabilities in Different Versions
There are 107 CVEs in the Android security bulletins that do not have corresponding entries in CVEDetails. For these CVEs, the CVEDetails website reports “Unknown CVE ID,” which means that the corresponding CVE has been reserved, but no information has been provided for it. Other public data sources also return similar results. For instance, cve.mitre.org describes these unknown CVE IDs as follows: “This candidate has been reserved by an organization or individual that will use it when announcing a new security problem. When the candidate has been publicized, the details for this candidate will be provided.” We believe that this discrepancy is due to the delay in updating these publicly available datasets. To evaluate the role of such delay, we study CVEs in Android bulletins that have unknown CVE IDs.

# 5 RQ3: Vulnerabilities Originating from Qualcomm and Linux
To study how long it takes for Google to patch vulnerabilities in components from other vendors and organizations, we focus on kernel and Qualcomm-related vulnerability patches that affect Android. In total, there are 1,092 Qualcomm-related and 210 kernel layer patches in the Android security bulletins. However, only 414 Qualcomm and 144 kernel layer patched vulnerabilities have references. For these vulnerabilities, we calculate the time difference of the published date on the respective Android security bulletin and the fix-commit date, which is shown in Figure 10. According to this figure, there is only one patched vulnerability, CVE-2017-8281.

whose publication date (September 2017 ) precedes its fix-commit date (December 2017 ). For all other vulnerability patches, the time difference is positive (see Figure 10). In other words, both Qualcomm and Linux patch vulnerabilities before Google publishes them on its security bulletins. The time differences vary mostly between roughly 120 and 450 days (i.e., between 4 months and 15 months).

# Time Differences Between Security Bulletin Date and Fix-Commit Date
We perform a Mann-Whitney U test to see whether there exists a statistical difference between Qualcomm and Linux when Google handles the vulnerabilities originating from them. Since the p-value of the test result is 0 and is lower than our confidence level which is p = 0, these two distributions are statistically different from each other. Therefore, this shows that Google handles vulnerabilities originated from open source platforms differently from the closed source platforms, i.e., Qualcomm. In this case, the mean time for Linux is higher than for Qualcomm. The underlying reason might be the more open, but diverse, software community in the Linux ecosystem, which corresponds to a longer time for Google to identify and address relevant vulnerabilities. As a result, it is crucial for the Android security team to closely monitor the Linux-related CVEs.

# 5 RQ4: Public Disclosure vs Patch Release
To investigate this question, we compare three different times. The first one is the patch release date, which indicates when a vulnerability patch is published on an Android security bulletin. The second one is the public repository disclosure date representing when a vulnerability detail is available in public repositories like CVEDetails. The third one is the last commit date indicating when the last fix-commit is made. Having the first commit and the bug creation date would also help us to understand the entire timeline of a vulnerability. However, since these dates are not publicly available, we focus on the aforementioned three dates. The relation between these three dates in an ideal setting should be as follows. The first date should be the last commit date, which should then be followed by the patch release date. The patch release date is the point in time where Android releases its security patches. If a public repository disclosure date is sooner than the patch release date, this may place many Android devices at risk. As a result, the public repository disclosure date should be after the patch release date.

We limit our analysis to those patched vulnerabilities that have (only) AOSP Git repository references. In other words, we do not consider other external references/repositories like Qualcomm and Linux, since those vulnerabilities are patched in other repositories in addition to AOSP Git repositories. Note that a patch release date does not exactly correspond to the time of disclosing a patched vulnerability. Only 632 patched vulnerabilities fall into this criterion, i.e., having AOSP Git repository references. Also note that a patched vulnerability can have multiple references. Therefore, the time sequence can change since each reference has its own last fix-commit date.