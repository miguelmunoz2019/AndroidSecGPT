For answering RQ3 and RQ4, we report and analyze the frequency of PRIs introduced (RQ3) and fixed (RQ4) in commits performed by project newcomers and regular contributors. Next, we build contingency tables with rows representing the types of PRIs and columns representing the developers’ status; then, we compute the Cramer’s V coefficient of each contingency table . The Cramer’s V coefficient is a well-known measure of association applicable to contingency tables involving two categorical variables and it is defined within the  range, where 0 indicates no correlation and a value of 1 indicates perfect correlation.

For RQ3 and RQ4 we provide descriptive statistics for both the issuesPerCommiti(d, t, r) and issuesPerCommitf(d, t, r) metrics. For each metric, we apply the Mann-Whitney U test for statistically testing the following two-tailed null hypothesis: the distributions of the number of PRIs introduced (fixed) per commit are the same for both newcomers and regular contributors . The effect-size of the differences among PRIs distributions is quantified by using the Cliff’s delta (d) measure.

# V. RESULTS
# A. RQ1 – What are the most common types of permission-related issues in Android apps?
Table III provides descriptive statistics for occurrences of PRIs, as well as counts of unique issues and affected apps. A total of 3,900 unique permission issues were identified. They are distributed across 402 distinct apps, with a median of 1 PRI per app. For all types of PRI, we can observe that the mean amount of occurrences is higher than the median, meaning that the average is influenced by apps in the upper part of the data that exhibit an especially high amount of PRIs. Furthermore, we can observe that over and under-permissions are the two most common issues, with 2,635 and 939 occurrences. The apps in our dataset have on average more than four over-permission issues and more than one under-permission issue. Diffusion of issue types MC and MRP appears to be on a lower scale, with 205 and 91 instances affecting 60 and 9 apps.

As a preliminary step prior to further analysis, we test for independence of observations among the four PRIs types. We statistically test this hypothesis by applying the Fisher’s exact test. The results of the test (p − value < 0) allow us to reject the null hypothesis of independence among occurrences.

**Table III: Descriptive statistics for occurrences of PRIs**
of PRI types. Likewise, the null hypothesis is always rejected (p − value < 0) for all post-hoc pairwise comparisons. Differences in means and standard deviation across the four types of PRIs suggest that the distribution of occurrences differs according to PRI type. We statistically test this hypothesis by applying the Friedman omnibus test. These results (p − value < 0) allow us to reject the null hypothesis that distributions of occurrences of PRI types are not statistically significantly different. Results of pairwise comparisons, using the Conover’s test, reveal that the distribution of occurrences of each PRI type is statistically different from the others. Estimations of magnitude of differences, via pairwise applications of Cliff’s d, reveal a large effect size for all pairs involving PRIs of type O, while it is negligible for all other pairs.

# B. RQ2 – How long do permission-related issues tend to remain in Android apps across their lifetime?
Descriptive statistics of decay time for each type of PRI is summarized in Table IV. We can observe that for all PRI types the minimum decay time is equal to 1 day, while the maximum is close to 7, 3, 2 and 1 years for issues of type O, U, MC, and MRP, respectively. Median decay is quite similar for O and U issues, with a value of approximately one week, but significantly differs for issues MC and MRP, with a value of about 12 weeks for the former and 1 day for the latter. As expected, results of the application of the Friedman omnibus test (p − value < 0) allows us to reject the null hypothesis that distributions of decay times across the four types of PRIs does not significantly differ. Post-hoc analysis, performed via the Conover’s test, reveals that the distribution of decay times for each PRI type is significantly different from the others, with the sole exception of the U-MC pair, for which we cannot reject the null hypothesis.

**Table IV: Descriptive statistics for decay time of PRIs**
The mean of decay time is much higher than the median for all PRI types. This suggests that the average is greatly influenced by a subset of the data on the higher part of the scale. This observation is even more notable for O and MC.

# C. RQ3 – How does developers’ status within the project correlate with the introduction of permission-related issues?
As previously mentioned in Section IV, the results discussed above may depend on the total number of commits that each developer performs in a repository. Table V shows the number of PRIs introduced by each developer per repository, normalized by the total number of authored commits. Here we can observe that the number of PRIs per commit are generally very low both for project newcomers and regular contributors, with all medians equal to 0, very low averages, and extremely compact distributions (all standard deviations < 0).

After the application of the Mann-Whitney U test, we do not obtain a statistically significant measure of correlation between these two categorizations (p-value = 0); this does not allow us to reject the null hypothesis that the distributions of the number of PRIs introduced per commit are the same for newcomers and regular contributors.

# D. RQ4 – How does developers’ status within the project correlate with fixes of permission-related issues?
We answer this research question by following the same procedure of RQ3; the only differences are that (i) now we are focusing on the commits in which PRIs have been fixed (as opposed to when they are firstly introduced) and (ii) we are considering exclusively the PRIs which have been fixed along the lifetime of the app, so that their PRI fixings commit is meaningful. Figure 3 shows the frequency of developers’ statuses when fixing each type of PRI.

Also in this case, the number of PRIs per commit is very low across all PRI types and developers’ status, with an overall mean of 0 and all medians equal to zero. The application of the Mann-Whitney U test yields a statistically significant result with p-value < 0), allowing us to reject the null hypothesis that the distributions of the number of PRIs fixed per commit are the same for newcomers and regular contributors . However, the effect size is negligible (Cliff’s d = −0).

# TABLE VI: Issues per commit over developers’ status when introducing PRIs
# VI. DISCUSSION
RQ1. Permission-related issues are a frequent phenomenon in Android apps. The vast majority of the analyzed apps suffer from the presence of at least one PRI. Over and under-permissions are more prevalent than MC and MRP PRIs. Occurrences of PRIs appear to be dependent among PRI types. The distribution of occurrences significantly differs for each PRI type. By examining the number of issues identified for each PRI type, we can easily observe that the majority of issues is of types O and U. The mean amount of occurrences per app differs among the two, with a value μ = 4 for the former and μ = 1 for the latter. These results provide an initial notion of the prevalence of over- and under-permission phenomena in Android apps, as partially also confirmed by Felt et al. Moreover, by examining the counts of identified issues for all PRI types, we notice that issues of types MC and MRP amount to a comparatively small minority of the total. Although further research is required to fully determine the reason behind this imbalance, we believe that a primary factor is that MC and MRP issues are harder to introduce. In fact, in order to introduce MC or MRP, specific conditions must be met in the application code. However, types O or U may only require a mistake in the Android Manifest file. The dependence among occurrences of PRI types hints that whenever one type of PRI is found in the development history of an app, then also other kinds of PRIs are likely to be present. This is not overly surprising as developers who are not knowledgeable, or attentive about permissions are more likely to introduce multiple types of PRIs in their apps.