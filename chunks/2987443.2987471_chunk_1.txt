# An Analysis of the Privacy and Security Risks of Android VPN Permission-enabled Apps
# Muhammad Ikram1,2, Narseo Vallina-Rodriguez3, Suranga Seneviratne1, Mohamed Ali Kaafar1, Vern Paxson3,4
# 1Data61, CSIRO 2UNSW 3ICSI 4UC Berkeley
# ABSTRACT
Millions of users worldwide resort to mobile VPN clients to either circumvent censorship or to access geo-blocked content, and more generally for privacy and security purposes. In practice, however, users have little if any guarantees about the corresponding security and privacy settings, and perhaps no practical knowledge about the entities accessing their mobile traffic.

In this paper we provide a first comprehensive analysis of 283 Android apps that use the Android VPN permission, which we extracted from a corpus of more than 1 million apps on the Google Play store. We perform a number of passive and active measurements designed to investigate a wide range of security and privacy features and to study the behavior of each VPN-based app. Our analysis includes investigation of possible malware presence, third-party library embedding, and traffic manipulation, as well as gauging user perception of the security and privacy of such apps. Our experiments reveal several instances of VPN apps that expose users to serious privacy and security vulnerabilities, such as use of insecure VPN tunneling protocols, as well as IPv6 and DNS traffic leakage. We also report on a number of apps actively performing TLS interception. Of particular concern are instances of apps that inject JavaScript programs for tracking, advertising, and for redirecting e-commerce traffic to external partners.

# 1. INTRODUCTION
Since the release of Android version 4 in October 2011, mobile app developers can use native support to create VPN clients through the Android VPN Service class. As opposed to the desktop context, where an app needs root access to create virtual interfaces, Android app developers only have to request the BIND_VPN_SERVICE permission (for simplicity, the “VPN permission”) to create such clients.

Android’s official documentation highlights the serious security concerns that the VPN permission raises: it allows an app to intercept and take full control over a user’s traffic. Many apps may legitimately use the VPN permission to offer (some form of) online anonymity or to enable access to censored content. However, malicious app developers may abuse it to harvest users’ personal information. In order to minimize possible misuse, Android alerts users about the inherent risks of the VPN permission by displaying system dialogues and notifications. A large fraction of mobile users may however lack the necessary technical background to fully understand the potential implications.

The use of the VPN permission by mobile apps, many of which have been installed by millions of users worldwide, remains opaque and undocumented. In this paper, we conduct in-depth analysis of 283 Android VPN apps extracted from a population of 1M Google Play apps. In our efforts to illuminate and characterize the behavior of VPN apps and their impact on user’s privacy and security, we develop a suite of tests that combines passive analysis of the source code with custom-built active network measurements. The main findings of our analysis are summarized as follows:
- Third-party user tracking and access to sensitive Android permissions: Even though 67% of the identified VPN Android apps offer services to enhance online privacy and security, 75% of them use third-party tracking libraries and 82% request permissions to access sensitive resources including user accounts and text messages.

- Malware presence: While 37% of the analyzed VPN apps have more than 500K installs and 25% of them receive at least a 4-star rating, over 38% of them contain some malware presence according to VirusTotal. We analyze the public user reviews available on Google Play for all the VPN apps to sense whether their users are aware of possible malicious activities in their apps. Our analysis reveals that only a marginal number of VPN users have publicly raised any security and privacy concerns in their app reviews.

- Traffic interception modes: The hosting infrastructure of VPN apps, which is heavily concentrated in the USA.

remains opaque for the end-user. 18% of the apps do not mention the entity hosting the terminating VPN server. Our network measurements also suggest that 16% of the analyzed apps may forward traffic through other participating users in a peer-forwarding fashion rather than using machines hosted in the cloud. This forwarding model raises a number of trust, security and privacy concerns for participating users. Finally, 4% of the analyzed VPN apps use the VPN permission to implement localhost proxies to intercept and inspect user traffic locally, primarily for antivirus and traffic filtering purposes.

# (Lack of) Encryption and traffic leaks:
18% of the VPN apps implement tunneling protocols without encryption despite promising online anonymity and security to their users. In fact, approximately 84% and 66% of the analyzed VPN apps do not tunnel IPv6 and DNS traffic through the tunnel interface respectively due to lack of IPv6 support, misconfigurations or developer-induced errors. Both the lack of strong encryption and traffic leakages can ease online tracking activities performed by in-path middleboxes (e.g., commercial WiFi APs harvesting user’s data) and by surveillance agencies.

# In-path proxies and traffic manipulation:
16% of the analyzed VPN apps deploy non-transparent proxies that modify user’s HTTP traffic by injecting and removing headers or performing techniques such as image transcoding. However, the artifacts implemented by VPN apps go beyond the typical features present in HTTP proxies. We identified two VPN apps actively injecting JavaScript code on user’s traffic for advertisement and tracking purposes and one of them redirects e-commerce traffic to external advertising partners.

# TLS interception:
Four of the analyzed VPN apps compromise users’ root-store and actively perform TLS interception in the flight. Three of these apps claim providing traffic acceleration services and selectively intercept traffic to specific online services like social networks, banking, e-commerce sites, email and IM services and analytics services.

Our results show that — in spite of the promises for privacy, security and anonymity given by the majority of VPN apps — millions of users may be unawarely subject to poor security guarantees and abusive practices inflicted by VPN apps. However, this study has not answered several interesting research questions such as traffic discrimination  and the detection of side-channels to extract additional private information from user’s phones.

# 2. ANDROID’S VPN PERMISSION
Google introduced native platform support for VPN clients through the VPN Service base class and its associated BIND_VPN_SERVICE permission in Android version 4 . For simplicity, we will reference the BIND_VPN_SERVICE permission as the “VPN permission”.

The BIND_VPN_SERVICE permission is a powerful Android feature that app developers can misuse or abuse. It allows the requesting app to intercept, manipulate and forward all user’s traffic to a remote proxy or VPN server of their choice or to implement proxies in localhost . Android’s VPN API exposes a virtual network interface to the requesting app and — if the developer configures correctly the routing tables — routes all the device’s traffic to it. Likewise, each write operation to the virtual interface injects a packet just like it was received from the external interface. As for any other Android permission, app developers must explicitly declare access to the VPN permission in the app’s AndroidManifest file  but Android limits the creation and ownership of the virtual interface to only one app at a given time.

Due to the exceptional security and privacy risks of allowing third-party apps to intercept all user’s traffic, Android generates two warnings to notify users whenever an app creates a virtual interface using the VPN permission: (i) a system dialog seeking users approval to create a virtual interface, and (ii) a system-generated notification that informs users as long as the VPN interface remains active . However, average mobile users may not fully understand, possibly due to the lack of technical background, the consequences of allowing a third-party app to read, block and/or modify their traffic.

Custom VPN permissions: Android’s native VPN support has enabled proprietary VPN solutions for enterprise clients such as Cisco AnyConnect  and Juniper Junos  technologies. Enterprise solutions, also known as Mobile Device Management solutions or MDM, implement their own tunneling protocols on top on Android’s VPN permission to secure and simplify remote access to enterprise or private networks. Samsung’s KNOX SDK  is a different incarnation of proprietary MDM solutions. In that case, Samsung takes advantage from its position as an Android OS vendor to completely replace Android’s VPN implementation at the firmware level with their own solution.