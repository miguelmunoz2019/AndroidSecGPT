Another limitation involved the hands-on effort required to test the apps as the process needed a great deal of manual interactions, including: setting up an account, creating a circle, inviting group members, and generating/sharing join codes. Additionally, each FL app may have many join codes; thus, to locate join code leakage, it requires finding every join code generated be correlated with the FL app being examined. For future work, we plan to expand our work by automating our methodology to overcome the limitations caused by the need for manual interactions so that our methodology can be scalable.

To explore code branches, we used Android Exerciser Monkey to generate random UI events to interact with the 41 FL apps. Those code branches were not explored by the manual efforts mentioned above. However, some research has found that the Monkey tool is only capable of exploring about 60% of code branches . Thus, it is likely that the Monkey tool failed to explore some of the FL app code branches that may leak sensitive information, either over network traffic or in the local storage.

Android 10 was released in September of 2019. Scope access on external storage, or “scope storage” was first introduced in this release. An app that targets Android 10 and above can create a directory on external storage to store its private information, and other apps cannot access this directory or its data. However, based on , Android version 8 remains the most popular in use. However, some users may think updating devices to a new version might affect the performance, the familiarity, or certain useful functions available in their current OS. Therefore, some users may not update their Android phones.

# 7 Responsible Security Disclosures and Responses
Among the 33 FL apps with security vulnerabilities, five apps have been removed from the Google Play store before we contacted the developers. However, we have sent emails to the developers of the 33 vulnerable apps disclosing all the identified vulnerabilities in their apps. We did not write a group email for security disclosures, but wrote an email for each app’s corresponding developer to maintain the confidentiality of our findings. In the email, we clearly stated the vulnerabilities and asked if there might be some interests by developers in addressing the security and privacy vulnerabilities. We received responses from 14 developers. Three of them were auto-reply responses (no human response). Two other responses came back with ticket numbers. When we inquired updates about the received tickets, we reached some web pages that did not have any information. We considered this negligence by developers an issue to the app development and integrity as security disclosures should always be expected.

The remaining nine responses we received were clearly written by developers as they asked for more details about the vulnerabilities and some suggestions on how to fix them. We then provided more details about the vulnerabilities in their apps. Nine of the developers replied and confirmed the security issues, and they showed interest in mitigating the issues in one of the next updates. One developer was very keen in addressing all disclosed vulnerabilities in a few weeks from our interaction.

Interestingly, one developer mentioned that their app relied on security mechanisms available by default on Android devices, and there is no need to have an extra level of security for users’ data. To elaborate, the developer meant that even if data was stored unencrypted, attackers would not be able to reach the data unless the device was rooted or the user installed malicious apps. However, we argue that not implementing security measures to protect personal data and putting the burden on users to do so are not realistic as users might mistakenly download malicious apps and their data would be at risk.

# 8 CONCLUSION
Although there are many benefits associated with the use of FL apps, our research showed that there were serious security and privacy vulnerabilities in the majority of the apps we tested. In this work, we performed security and privacy analyses of 41 FL apps collected from Google Play to test how user data was collected, transferred, and stored. Consequently, we found many FL apps collected a lot of Personally Identifiable Information (PII). We evaluated the apps on their protection of confidential data during transfer and storage, and found that 80% of the apps stored PII (e.g., location data) and secrets (e.g., join codes) in plaintext. Attackers can exploit these vulnerabilities to obtain sensitive information from insecure storage or during insecure transfer. Additionally, around 15% of the apps leaked sensitive information from back-end servers as a result of the absence of authentication and authorization checking. An attacker can exploit these technical vulnerabilities on the back-end server to reveal users’ sensitive information.

Clearly, these issues indicate that FL apps pose risks to the safety and security of the families who use them. Developers need to look into the design and implementation of these apps to address these issues and provide more secure experience to users. In future research, we plan to build tools to measure the security and privacy of FL apps automatically.

# Session 3: Privacy and Data Sharing
#permission-groups
28. Android team. 2016. Save files on device storage. Retrieved February 10, 2020 from https://developer.android.com/training/data-storage/files
29. Android Team. 2019. Distribution dashboard. Retrieved February 10, 2020 from https://developer.android.com/about/dashboards
30. Zack Whittaker. 2019. A family tracking app was leaking real-time location data. Retrieved February 10, 2020 from https://techcrunch.com/2019/03/23/family-tracking-location-leak/
31. R Winsniewski. 2012. Android–apktool: A tool for reverse engineering android apk files. Retrieved February 10, 2020 from https://ibotpeaches.github.io/Apktool/
32. Hao Zhang, Zhuolin Li, Hossain Shahriar, Dan Lo, Fan Wu, and Ying Qian. 2019. Protecting Data in Android External Data Storage. In 2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC), Vol. 1. IEEE, 924–925..